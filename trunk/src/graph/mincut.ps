%!PS-Adobe-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: mincut.dvi
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips mincut
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 1999.02.12:1054
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (mincut.dvi)
@start
%DVIPSBitmapFont: Fa cmbx12 14.4 7
/Fa 7 116 df<B912F0F0FF8019F819FF1AC0D8000701F0C714F0060F7F060113FE727F
737F737F85737F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC4F5A06035B060F13
F095B512C092B8C9FC19F819E019F89226F0000313FE9439007FFF80727F727F727F727F
727F8684A28684A787A71D1C75133EA38575137E73157C7513FC731401B86C6D9038F803
F807039038FE07F07390B512E0736C14C0080F1400CEEA7FFC5F537CD164>82
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849
486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B18
F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0
A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390
B55A010015C0021F49C7FC020113F034387CB63D>101 D<ED3FFC0203B5FC020F14C002
3F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A495AA2495AA2EE7FF8
495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB512FEA52E547CD329
>I<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC92393F001FFE0003027C
80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A5
42367BB54B>110 D<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1
F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A
90C7FCA55CB3AAB612FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC1203
48EB003FD80FF81307D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC
13FCEBFFC06C13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300
020714E0EC003F030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17
C07F6DEC3F8001F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048
C601F8C7FC2C387CB635>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr8 8 2
/Fb 2 50 df<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248
EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E
3803F0FC3800FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3
B113FE387FFFFEA2172C7AAB23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmtt9 9 24
/Fc 24 127 df<007FB512F8B612FCA46C14F81E067C9927>45 D<121EEA7F80A2EAFFC0
A4EA7F80A2EA1E000A0A728927>I<1538157C15FCA2140115F8140315F0140715E0140F
15C0141F1580143F1500A25C147E14FE5C13015C13035C13075C130F5CA2131F5C133F91
C7FC5B137E13FE5B12015B12035BA212075B120F5B121F5B123F90C8FC5A127E12FE5AA2
5A12781E3A7CB327>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCAC121EEA7F80A2
EAFFC0A4EA7F80A2EA1E000A20729F27>58 D<EB01FE903807FF80011F13C0017F13E090
B512F048EB03F83803FC013907F000FC390FE01F7C9038C07FFE381F80FF1301485A393E
07F1FF007E13E0397C0FC07FEC803FA2EAFC1F00F8EB001FA800FCEB803FD87C0F133EA2
ECC07E397E07E0FC003E13F1393F03FFF86C6C13F0018013E0390FC07FC09038E01F1E39
07F0003FD803FC137F3901FF03FF6CEBFFFE6D13FC011F13F0010713C001011300202E7D
AD27>64 D<3803FFC0000F13F04813FC4813FF811380EC1FC0381F000F000480C71207A2
EB0FFF137F0003B5FC120F5A383FFC07EA7FC0130012FE5AA46C130F007F131FEBC0FF6C
B612806C15C07E000313F1C69038807F8022207C9F27>97 D<EA7FE0487EA3127F1203A9
14FF01F313C090B512F08181EC81FE49C67E49EB3F8049131F16C049130FA216E01507A6
150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C02601E0FEC7
FC232E7FAD27>I<EB0FFF017F13C048B512E04814F05A380FF807EA1FE0393FC003E090
3880008048C8FC127EA212FE5AA67E127EA2007F14F0393F8001F813C0381FE003390FF8
0FF06CB5FC6C14E06C14C06C6C1300EB0FF81D207B9F27>I<EC3FF04A7EA3143F1401A9
EB0FE1EB7FFD48B5FC5A5A380FF83F381FE00F383FC007EB8003EA7F00007E1301A212FE
5AA67E007E1303A2127F6C1307EB800F381FE01F380FF03F6CB612C06C15E06C13FD3800
7FF9D91FE013C0232E7EAD27>I<EB0FF8EB3FFE90B51280000314C04814E0390FFC0FF0
391FE003F8EBC001D83F8013FC48C7FC127E157E12FEB612FEA415FC00FCC8FC7E127E12
7F6C143C6D137E6C7E01F013FE390FFC07FC6CB5FC000114F86C14F0013F13C0903807FE
001F207D9F27>I<153F90391FC0FF80D97FF313C048B612E05A4814EF390FF07F873A1F
C01FC3C0EDC000EB800F48486C7EA66C6C485AEBC01FA2390FF07F8090B5C7FC5C485BEB
7FF0EB1FC090C9FCA27F6CB5FC15E015F84814FE4880EB8001007EC7EA3F80007C140F00
FC15C0481407A46C140F007C1580007F143F6C6CEB7F009038F807FF6CB55A000714F86C
5CC614C0D90FFCC7FC23337EA027>103 D<EA7FE0487EA3127F1203A9147F9038F1FFC0
01F713F090B5FC8114C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A36C0183
13E0242E7FAD27>I<130F497E497EA46D5A6DC7FC90C8FCA7383FFF80487FA37EEA000F
B3A4007FB512F0B6FC15F815F07E1D2F7BAE27>I<EA7FE07F12FF127FA21201A991383F
FFC04A13E0A36E13C0913803F8004A5A4A5A4A5A4A5A02FFC7FCEBF1FEEBF3FCEBF7F8EB
FFFC8080143F496C7E496C7E01F87FEBF0076E7E6E7E816E7E157E3A7FFFC1FFF002C313
F8B512E36C13C316F0252E80AD27>107 D<387FFF80B57EA37EEA000FB3B2007FB512F8
B612FCA36C14F81E2E7CAD27>I<397F07C01F3AFF9FF07FC09039FFF9FFE091B57E7E3A
0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A7FF0FFC3FF486C01E3138001
F913E701F813E36C4801C313002920819F27>I<387FE07F39FFF1FFC001F713F090B5FC
6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A36C018313E02420
7F9F27>I<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391FC00FE0393F8007F0EB
00034814F8007E1301A248EB00FCA76C1301007E14F8A2007F1303393F8007F0A2391FE0
1FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F27>I<387FE0FFD8FF
F313C090B512F0816C800003EB81FE49C67E49EB3F8049131F16C049130FA216E01507A6
150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C0D9F0FEC7FC
91C8FCAC387FFF80B57EA36C5B23317F9F27>I<397FFC03FC39FFFE0FFF023F13804A13
C0007F90B5FC39007FFE1F14F89138F00F809138E002004AC7FC5CA291C8FCA2137EAD00
7FB57EB67EA36C5C22207E9F27>114 D<9038FFF3800007EBFFC0121F5A5AEB803F38FC
000F5AA2EC07806C90C7FCEA7F8013FC383FFFF06C13FC000713FF00011480D8000F13C0
9038003FE014070078EB03F000FC1301A27E14036CEB07E0EBE01F90B512C01580150000
FB13FC38707FF01C207B9F27>I<133C137EA8007FB512F0B612F8A36C14F0D8007EC7FC
AE1518157EA415FE6D13FC1483ECFFF86D13F06D13E0010313C0010013001F297EA827>
I<3A7FFE07FFE000FF15F06D5A497E007F15E03A0F80001F00A36D5B0007143EA414F0EB
C1F83903E3FC7CA4EBE79EA200011478A301F713F8A2EBFF0F6C5CA3EBFE0790387C03E0
24207F9F27>119 D<3901F003803903FC07C0000F130F381FFE1F393FFF7F80397FBFFF
0038FE1FFE486C5A00F813F0387003E01A0A7AAD27>126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr9 9 32
/Fd 32 128 df<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C
121C5A5A126009177A8715>44 D<B512F0A514057F921A>I<15E0A34A7EA24A7EA34A7E
A3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A2
49486C7EA301066D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E
7EA20001821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>65
D<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFC
D97F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F
160CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C1570
6D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512
F0023F13C0DA03FEC7FC2E377CB437>67 D<B77E16F016FE3A01FE0001FF00009138003F
C0EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F
18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F81680
34337EB23B>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7C
D91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C485A17
1C123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F7F12
1FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEB
F81C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>71 D<B512FEA3000113006C
5AB3B3A7487EB512FEA317337EB21C>73 D<017FB5FCA39038003FE0EC1FC0B3B1127EB4
FCA4EC3F805A0060140000705B6C13FE6C485A380F03F03803FFC0C690C7FC20357DB227
>I<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC01418
A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E1306A2
6E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C133ED8
0FF04B7EB5011C90387FFFF8A33D337CB246>77 D<B612FEEDFFC016F03A03FC0007FC00
01EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED
07F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>80 D<90381FE00390387FFC
0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A200788000F880A46C80A27E92
C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C680013F7F01037F9038003FFF
140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E
6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC22377CB42B>83
D<B500FE90381FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C14
60011F15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF002
0F13C0020190C8FC35357EB23A>85 D<EB7F803803FFF0380F80FC381C003E003F133F6D
6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F
13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE
003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F700
7E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6D
EB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8
EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA1F80123F90380003E04890
C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14706C6C13E03903F001C039
00FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFC
EBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E
6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B
>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014
014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13
706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF9038
1F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3
A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907
E03F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C
6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C
14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390F
C001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA0780EA0FC0EA1FE0A4EA0F
C0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>105
D<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C
5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81
486CEBFF80B500C313F0A324347EB329>107 D<EA07E012FFA3120F1207B3B3A7EA0FF0
B5FCA310347EB315>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903B
F3803E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C487E
B53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C
3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0
EB3FFE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248147E003E14
3E007E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F0
07E03900FC1F80D93FFEC7FCEB07F021237EA126>I<3803E07C38FFE1FF9038E38F8090
38E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>114
D<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7F
FC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C
5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201
A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1F
F8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D1201
6D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B53801FFF8
A32603FE0013806C48EB7C0000001478017E1370017F5B90383F81C090381F8380D90FC3
C7FCEB07E614FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB0C079038
1C03F0496C7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29>120
D<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E13
18A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01
FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA78
38EA1FF0EA0FC025307F9F29>I<001C1370387F01FC00FF13FEA4007F13FC381C007017
0879B226>127 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsy6 6 2
/Fe 2 122 df<136013701360A20040132000E0137038F861F0387E67E0381FFF803807
FE00EA00F0EA07FE381FFF80387E67E038F861F038E060700040132000001300A2137013
6014157B9620>3 D<136013F0A81360A4387C63E0B512F0A2387C63E038006000A313F0
B3A21360A7142F7CA31E>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx10 10.95 16
/Ff 16 120 df<140F143F5C495A130F48B5FCB6FCA313F7EAFE071200B3B3A8B712F0A5
243C78BB34>49 D<903803FF80013F13F890B512FE00036E7E4881260FF80F7F261FC003
7F4848C67F486C6D7E6D6D7E487E6D6D7EA26F1380A46C5A6C5A6C5A0007C7FCC8FC4B13
00A25E153F5E4B5AA24B5A5E4A5B4A5B4A48C7FC5D4A5AEC1FE04A5A4A5A9139FF000F80
EB01FC495A4948EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A5A5A5AB7FC5EA4
293C7BBB34>I<903801FFE0010F13FE013F6D7E90B612E04801817F3A03FC007FF8D807
F06D7E82D80FFC131F6D80121F7FA56C5A5E6C48133FD801F05CC8FC4B5A5E4B5A4A5B02
0F5B902607FFFEC7FC15F815FEEDFFC0D9000113F06E6C7E6F7E6F7E6F7E1780A26F13C0
A217E0EA0FC0487E487E487E487EA317C0A25D491580127F49491300D83FC0495A6C6C49
5A3A0FFE01FFF86CB65A6C5DC61580013F49C7FC010313E02B3D7CBB34>I<EA0FC0EA1F
E0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC0C7FCACEA0FC0EA1FE0EA3FF0EA
7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E2879A71D>58 D<B712E0A526003FFEC9FC
B3AD183EA4187E187CA418FCA21701A2EF03F8A21707170F171F177FEE01FF160FB9FC18
F0A4373E7DBD3F>76 D<B812F017FF18C018F018FC26003FFCC77FEF1FFF7113807113C0
7113E0A27113F0A319F8A819F0A34D13E019C05F4D1380053F1300EFFFFE91B712F86018
8005FCC7FC4ACAFCB3A4B77EA53D3E7DBD47>80 D<903807FFC0013F13F848B6FC488126
07FE037F260FF8007F6DEB3FF0486C806F7EA36F7EA26C5A6C5AEA01E0C8FC153F91B5FC
130F137F3901FFFE0F4813E0000F1380381FFE00485A5B485A12FF5BA4151F7F007F143F
6D90387BFF806C6C01FB13FE391FFF07F36CEBFFE100031480C6EC003FD91FF890C7FC2F
2B7DA933>97 D<ECFFF0010713FE011F6D7E017F809039FFE07FE0489038801FF048496C
7E48486D7E48486D7E121F491301003F81A2485A6F1380A212FFA290B7FCA401F0C9FCA5
127FA27F123FEE0F806C7E161F6C6C15006C6C5C6C6D137E6C9038E001FC6C9038F80FF8
013FB55A6D14C0010391C7FC9038007FF8292B7DA930>101 D<EC07FE91387FFF8049B5
12C0010714E090390FFE3FF0EB1FF090393FE07FF8EB7FC013FF1480A2489038003FF0ED
1FE0ED0FC092C7FCAAB612E0A500010180C7FCB3AC007FEBFF80A525407DBF20>I<13FF
B5FCA512077EAFED1FF8EDFFFE02036D7E4A80DA0FE07F91381F007F023C805C4A6D7E5C
A25CA35CB3A4B5D8FE0FB512E0A5333F7CBE3A>104 D<EA01F8487E487E487E481380A6
6C13006C5A6C5A6C5AC8FCA913FFB5FCA512077EB3ABB512F8A515407CBF1D>I<13FFB5
FCA512077EB3B3AFB512FCA5163F7CBE1D>108 D<01FFD91FF8ECFFC0B590B5010713F8
0203DAC01F13FE4A6E487FDA0FE09026F07F077F91261F003FEBF8010007013EDAF9F080
6C0178ECFBC04A6DB4486C7FA24A92C7FC4A5CA34A5CB3A4B5D8FE07B5D8F03FEBFF80A5
51297CA858>I<EC7FF0903803FFFE011FEBFFC0017F14F09039FFE03FF8489038800FFC
3A03FE0003FE48486D7E000F168048486D13C0A2003F16E049147F007F16F0A400FF16F8
AA007F16F0A46C6CECFFE0A2001F16C06C6C491380A26C6C4913003A03FF800FFE6C9038
E03FFC6C6CB512F0011F14C0010791C7FC9038007FF02D2B7DA934>111
D<3901FE01FE00FF903807FF804A13E04A13F0EC3F1F91387C3FF8000713F8000313F0EB
FFE0A29138C01FF0ED0FE091388007C092C7FCA391C8FCB3A2B6FCA525297DA82B>114
D<B53CFC3FFFFC03FFFEA50003D980009039C0000F806E161F6C037F15006E496C5B6C18
3E836E48157E017F177C6E486D13FC013F02EF5C83DAFC071401011F02C75CDAFE0FEBFE
03010F02835C17FFDAFF1F14076D02015C03BF148F6DD9BE005C18CF03FE14DF6D49017F
90C7FC18FF6D496D5AA36E486D5AA26E486D5AA36E486D5AA26E486D5A47287EA74C>
119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmti10 10.95 50
/Fg 50 122 df<EA01E0EA07F8120F13FC121FA4120FEA03D8EA0018A213381330137013
6013E013C01201EA038013005A120E5A5A5A5A5A0E1C6DBE1C>39
D<ED01801507ED0F00151C5D5D5D14014A5A4A5A4AC7FC141E143E5C14785C1301495AA2
495A5C130F49C8FCA2133EA25BA213FC5B12015BA212035B1207A25B120FA25BA2121FA2
90C9FCA25AA2123EA2127EA2127CA65AAB1278A67EA47EA2120E120F7EA26C7EA26C7E6C
7E1360215A73C325>I<14031580A2EC01C0EC00E0A21570A215781538153CA3151EA415
1FA2150FA7151FA9153FA2153EA3157EA2157CA215FCA215F8A21401A215F0A2140315E0
A2140715C0A2EC0F80A2141F15005C143EA25CA25CA2495A5C1303495A5C130F49C7FC13
1E5B137C5B5B485A485A485A48C8FC121E5A12705A5A205A7FC325>I<EA01E0EA07F812
0FA2EA1FFCA4EA0FF8EA0798EA001813381330A21370136013E013C01201EA0380EA0700
1206120E5A5A5A5A5A0E1C7A891C>44 D<387FFFFEA3B5FCA21705799521>I<120FEA3F
C0127FA212FFA31380EA7F00123C0A0A77891C>I<15031507150F151F151E153E157EEC
01FEEC03FC1407141FEB01FF90380FFBF8EB1FC3EB0E07130015F0A2140FA215E0A2141F
A215C0A2143FA21580A2147FA21500A25CA25CA21301A25CA21303A25CA21307A25CA213
0FA25CA2131FA25CEB7FE0B612F0A215E0203D77BC2E>49 D<15FE913803FFC091380F01
F091383C00F84A137C4A7F4948133F49487F4A148049C7FC5BEB0E0C011E15C0EB1C0EEB
3C06133813781370020E133FD9F00C148013E0141C0218137F00011600EBC0384A13FEEC
600102E05B3A00E3C003F89039FF0007F0013C495A90C7485A5E037FC7FC15FC4A5A4A5A
EC0FC04AC8FC147E14F8EB03E0495A011FC9FC133E49141801F0143C48481438485A1678
485A48C85A120E001E4A5AD83FE0130301FF495A397C3FF01FD8780FB55AD8700391C7FC
D8F0015B486C6C5A6E5AEC07C02A3F79BC2E>I<ED7F80913803FFE091380F80F891383C
007C02F87FD901E07F494814804948130F49C7FC010E15C0131EEB1C18EB3C1CEB380C01
78141F17801370A2021C133F6D4814004A5BD91FE0137ED90F805B90C8FC4B5A4B5A4B5A
ED1F8003FFC7FCECFFFC15F0A2EC00FC153E153F8182150F82A4151FA2121E127F153F48
5DA3484AC7FC12F800E014FE5D14016C495A0070495A0078EB0FC00038495A6C017EC8FC
380F01F83803FFE0C690C9FC2A3F78BC2E>I<1638167E16FE16FCA3150116F8A3150316
F0A2150716E0A2ED0FC0A3ED1F80A216005DA2157EA2157C15FC5D14015D14035D4A5AA2
4A5AA24AC7FC143EED038091387C0FC014F8ECF01F01011480EB03E014C0903807803F01
0F1400EB1F00133E495B49137E485A485A484813FE48B46C5A4813F04813FE267C00FF13
0800F090380FFFFC00601301C714E0913803F8005DA314075DA3140F5DA3141F5DA3020E
C7FC274F7DBC2E>I<ED0FE0ED7FF8913801F01C913807C00E91381F800F91383E00074A
131F4A137F494813FF1303495A494813FE131F4948137891C8FC5B13FEA2485AA212035B
0007EB1FC0EC7FF0390FF1E07C9038F3803EEBF700D81FFE7F4914805BED0FC0485A5B15
1F4914E0127FA25BED3FC0A248C7FCA2157F16805AA215FF1600A24A5AA2485C007C495A
A2007E495A4A5A003E495A003F495A261F807EC7FC380FC1FC6CB45A6C13E0C66CC8FC28
3F76BC2E>54 D<D9703FEB01C09138FF800301F3158001EFEBC00790B5EB0F0048151E14
832603FE015B01F8147C2607F0005B49EBE3F04848137F496D5A48C71201001E4A5A1507
485D0038140F007892C7FC00705C00F0143E5A5DC8FC5DA24A5AA214035D14074A5AA214
1F5DA24AC8FCA25C147E14FEA2495AA3495AA313075C130FA25C131FA35C133FA35C91C9
FC131E2A3F73BC2E>I<15FF020713C091381F81E091383E00F002FC13F84948137C495A
4948137E010F143E495A133F4A133F017F147F91C7FC5BA2485AA216FF12035B16FE1501
12075B1503A216FC491307A20003140F16F8151F12016D133F0000EC7FF015EF90387C01
CF90393E079FE090380FFE1FD903F813C090C7123FA21680157F160015FEA24A5A001C5C
007F1303485C4A5A4A5A4A5A4849C7FC00F8137E00E05B6C485A387C07E0383FFFC06C90
C8FCEA03F8283F77BC2E>57 D<131EEB3F80137FEBFFC05AA214806C13005B133C90C7FC
B3120FEA3FC0127FA212FFA35B6CC7FC123C122777A61C>I<171C173C177CA217FCA216
011603A21607A24C7EA2161DA216391679167116E1A2ED01C1A2ED038115071601150EA2
031C7FA24B7EA25D15F05D4A5AA24A5AA24AC7FC5C140E5C021FB6FC4A81A20270C7127F
A25C13015C495AA249C8FCA2130E131E131C133C5B01F882487ED807FEEC01FFB500E001
7FEBFF80A25C39417BC044>65 D<9339FF8001C0030F13E0033F9038F803809239FF807E
07913A03FC001F0FDA0FF0EB071FDA1FC0ECBF00DA7F806DB4FC4AC77E495AD903F86E5A
495A130F4948157E4948157C495A13FF91C9FC4848167812035B1207491670120FA2485A
95C7FC485AA3127F5BA312FF5BA490CCFCA2170FA2170EA2171E171C173C173817786C16
706D15F04C5A003F5E6D1403001F4B5A6D4AC8FC000F151E6C6C5C6C6C14F86C6C495A6C
6CEB07C090397FC03F8090261FFFFEC9FC010713F0010013803A4272BF41>67
D<49B712C018F818FE903B0003FE0003FF9438007F804BEC1FC0F00FE0F007F014074BEC
03F8F001FCA2140F4BEC00FEA3141F4B15FFA3143F5DA3027F5D5DA219FE14FF92C81203
A34917FC4A1507A219F813034A150F19F0A20107EE1FE05CF03FC0A2010FEE7F804A1600
6060011F4B5A4A4A5A4D5AA2013F4B5A4AEC3FC04DC7FC017F15FEEE03FC4AEB0FF001FF
EC7FE0B8128004FCC8FC16E0403E7BBD45>I<49B812F0A390260003FEC7123F180F4B14
03A2F001E014075DA3140F5D19C0A2141F5D1770EFF003023F02E013804B91C7FCA21601
027F5CED8003A2160702FFEB1F8092B5FCA349D9003FC8FC4A7F82A20103140E5CA2161E
0107141C5CA293C9FC130F5CA3131F5CA3133F5CA2137FA25C497EB612E0A33C3E7BBD3B
>70 D<49B6FC5BA2D9000313005D5DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA3
14FF92C7FCA35B5CA313035CA313075CA3130F5CA3131F5CA3133F5CA2137FA25C497EB6
7EA3283E7BBD23>73 D<4AB61280A2180091C713C0167F5FA216FF94C7FCA35D5EA31503
5EA315075EA3150F5EA3151F5EA3153F5EA3157FA25EA215FFA293C8FCA25CA25DA2380F
8003EA3FC0D87FE05BA21407D8FFC05B140F01805B49485A12FC0070495A4A5A6C01FEC9
FC383C01FC380F07F03807FFC0C648CAFC314079BD30>I<49B612C0A25FD9000390C8FC
5D5DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92C9FCA35B5CA313035C18
C0EF01E0010716C05C17031880130F4A140718005F131F4A141EA2173E013F5D4A14FC16
01017F4A5A16074A131F01FFECFFF0B8FCA25F333E7BBD39>76 D<49B5933807FFFC4960
62D90003F0FC00505ADBBF805E1A771AEF1407033F923801CFE0A2F1039F020FEE071F02
0E606F6C140E1A3F021E161C021C04385BA2F1707F143C023804E090C7FCF001C0629126
780FE0495A02705FF00700F00E0114F002E0031C5BA2F03803010116704A6C6C5D18E019
070103ED01C00280DA03805BA2943807000F13070200020E5C5FDB03F8141F495D010E4B
5CA24D133F131E011CDAF9C05CEEFB80197F013C6DB4C7FC013895C8FC5E01784A5C13F8
486C4A5CD807FE4C7EB500F04948B512FE16E01500563E7BBD52>I<EEFFC0030713F892
383F80FE9238FC003FDA03F0EB0F804A486D7EDA1F80804AC76C7E027E6E7E4A81494814
004948811307495A4948157F133F5C49C9FC4917805B1201485AA212075B000F17FFA25B
121F190048485DA448484B5AA34D5AA25B4D5A12FF60171F60007F163F604D5AA24DC7FC
5F003F15014C5A6D5D001F4B5A4C5A6C6C4A5A4C5A6C6C4AC8FC000315FC6C6C495A6C6C
EB07E0017FEB1F8090261FC07EC9FC903807FFF801001380394273BF46>79
D<49B77E18F018FC903B0003FE0003FEEF00FF4BEC7F80F03FC00207151F19E05DA2020F
16F0A25DA2141FF03FE05DA2023F16C0187F4B1580A2027FEDFF00604B495A4D5A02FF4A
5A4D5A92C7EA3FC04CB4C7FC4990B512FC17E04ACAFCA21303A25CA21307A25CA2130FA2
5CA2131FA25CA2133FA25CA2137FA25C497EB67EA33C3E7BBD3E>I<92390FF001C0ED7F
FE4AB5EA0380913907F80FC791390FC003EF91391F8001FF4AC71300027E805C495A4948
143EA2495AA2010F153C5CA3011F1538A38094C7FC80A214FC6DB4FC15F015FE6DEBFFC0
6D14F06D14FC6D80143F020F7F020180EC001F150303007F167F163FA2161FA212075A5F
120EA2001E153F94C7FCA2163E003E157E167C003F15FC4B5A486C5C4B5A6D495AD87DE0
EB1F80D8F8F849C8FC017F13FE39F03FFFF8D8E00F13E048C690C9FC32427ABF33>83
D<48B9FCA25A903AFE001FF00101F89138E0007FD807E0163E49013F141E5B48C75BA200
1E147FA2001C4B131C123C003814FFA2007892C7FC12704A153C00F01738485CC7160014
03A25DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA25DA214FFA292C9FCA2
5BA25CA21303A25CEB0FFE003FB67E5AA2383D71BC41>I<277FFFFE01B500FC90B512E0
B5FCA20003902680000790C7380FFC006C90C701FCEC07F049725A04035EA26350C7FCA2
0407150EA2040F5D1A3C041F153862163B6216734F5A6D14E303014B5A6C15C303034BC8
FC1683DB0703140E191E030E151C61031C7F61ED380161157003F04A5A15E002014B5A15
C0DA03804AC9FC60DA0700140E60140E605C029C5D14B8D97FF85D5C715A5C4A5DA24A92
CAFC5F91C7FC705A137E5F137C5F137801705D53406EBD5B>87 D<913801FFF05CA216E0
EDC00014075DA3140F92C7FCA35C141EA3143E143CA3147C1478A314F85CA313015CA313
035CA313075CA3130F91C8FCA35B131EA3133E133CA3137C1378A313F85BA312015BA312
035BA312075BA3120F90C9FCA35A121EA3123E123CA3127C1278EA7FFCA212FFA2245B7C
C31C>91 D<913801FFF05CA216E0EC00011503A216C0A21507A21680A2150FA21600A25D
A2151EA2153EA2153CA2157CA21578A215F8A25DA21401A25DA21403A25DA21407A25DA2
140FA292C7FCA25CA2141EA2143EA2143CA2147CA21478A214F8A25CA21301A25CA21303
A25CA21307A25CA2130FA291C8FCA25BA2131EA2133EA2EA7FFCA212FFA2245B83C31C>
93 D<147E49B47E903907C1C38090391F80EFC090383F00FF017E137F4914804848133F
485AA248481400120F5B001F5C157E485AA215FE007F5C90C7FCA21401485C5AA21403ED
F0385AA21407EDE078020F1370127C021F13F0007E013F13E0003E137FECF3E1261F01E3
13C03A0F8781E3803A03FF00FF00D800FC133E252977A72E>97 D<EB1FC0EA0FFF5CA2EA
003FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25B147E3907F1FF809038F7
83E09038EF01F013FE390FF800F8A24913FC49137C485A157E5B15FE123FA290C7FCA248
130115FC127EA2140300FE14F85AA2EC07F0A215E048130F15C0141F15800078EB3F0012
7C147E003C5B383E01F8381E03E06C485A6CB4C7FCEA01F81F4076BE2A>I<EC1FE0ECFF
F8903803F03E903807C00F90381F8007D93F001380017E131F49137F485A485A00071500
5B000F147E484890C7FCA2485AA3127F90C9FCA35A5AA6481403007E5C5D151E003E5C5D
6C5CEC03E0390F800F802603E07EC7FC3801FFF838003FC0212977A72A>I<EE3F80ED1F
FF1700A2ED007FA2167EA216FEA25EA21501A25EA21503A25EA21507A25E147E903801FF
8F903807C1CF90391F80EFC090383F00FF017E137F5B48486D5A485AA2485A000F92C7FC
5B001F5CA24848137EA215FE127F90C75AA214015A485CA2140316384814F0A214071678
91380FE070127C021F13F0007E013F5B003E137FECF3E1261F01E35B3A0F8781E3802703
FF00FFC7FCD800FC133E294077BE2E>I<EC3F80903801FFE0903807E0F890381F803CEB
3E0001FC131E485A485A12074848133E49133C121F4848137C15F8EC03F0397F000FE0EC
FF80B5EAFC0014C048C8FCA45AA61506150E151E007C143C15786C14F0EC01E06CEB07C0
390F801F003807C0FC3801FFF038007F801F2976A72A>I<167C4BB4FC923807C7809238
0F83C0ED1F87161FED3F3FA2157EA21780EE0E004BC7FCA414015DA414035DA30103B512
F8A390260007E0C7FCA3140F5DA5141F5DA4143F92C8FCA45C147EA414FE5CA413015CA4
495AA4495AA4495A121E127F5C12FF49C9FCA2EAFE1EEAF83C1270EA7878EA3FE0EA0F80
2A5383BF1C>I<EC03F0EC0FFC91383E0E1C9138FC077E903901F003FE1303903807E001
D90FC013FCEB1F80A2EB3F004914F8137E01FE1303A2484814F0A2150712034914E0A215
0F12074914C0A2151FA216805B153F1203ED7F006D5BA200015B0000495A9038F80F7E90
387C1EFEEB1FF8903807E0FC90C7FC1401A25DA21403A25D001C1307007F5C48130F5D4A
5A4AC7FC48137E00F85B387C03F0381FFFC0D803FEC8FC273B7CA72A>I<EB01FC13FF5C
A21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCEC03F890387F0FFE91
383E0F80D97E7813C0ECE007D9FFC013E014801400A2485A5BA25B0003140F16C05BA200
07141F16805BA2000F143F16005B5D001F147EEDFE074913FCA2003F0101130FEDF80E13
00161E48ECF01CA2007E1538A200FE1570020013E048EC7FC00038EC1F0028407ABE2E>
I<1478EB01FCA21303A314F8EB00E01400AD137C48B4FC38038F80EA0707000E13C0121E
121CEA3C0F1238A2EA781F00701380A2EAF03F140012005B137E13FE5BA212015BA21203
5B1438120713E0000F1378EBC070A214F0EB80E0A2EB81C01383148038078700EA03FEEA
00F8163E79BC1C>I<1507ED1FC0A2153FA31680ED0E0092C7FCADEC07C0EC3FF0EC78F8
ECE07CEB01C01303EC807EEB0700A2010E13FE5D131E131CEB3C01A201005BA21403A25D
A21407A25DA2140FA25DA2141FA25DA2143FA292C7FCA25CA2147EA214FEA25CA213015C
A2121C387F03F012FF495A5C495A4848C8FCEAF83EEA707CEA3FF0EA0FC0225083BC1C>
I<EB07F0EA03FF14E0A2EA000FA214C0A2131FA21480A2133FA21400A25BA2137EA213FE
A25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25A
1307127EA2EAFE0F130E12FCA2131E131CA2EA7C381378EA3C70EA1FE0EA0780144079BE
17>108 D<D801F0D93F80137F3D07FC01FFE003FFC03D0F3E07C1F80F83F03D0E1F0F00
FC1E01F8001E011C90387C3800001C49D97E707F003C01F05C0038157F4A5C26783FC05C
12704A91C7FC91C7127E00F003FE1301494A5CEA007EA20301140301FE5F495CA2030314
07000160495C180F03075D0003051F13E0494A1480A2030FEC3F810007F001C0495CA203
1F91383E0380120F494AEC0700A2033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03
E0432979A74A>I<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F00FC001E011C
137C001C49137E003C13F012385C38783FC012705C91C7FC00F015FE495CEA007EA21501
01FE5C5BA2150300015D5B15075E0003020F13704914C0A2031F13F00007ED80E05B1681
EE01C0120F49EC0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C2979A733>I<EC
1FC0ECFFF8903803F07C90380FC01FEB1F8090393F000F80017E14C0491307484814E048
5A12075B000F15F0485AA2485AA2ED0FE0127F90C7FCA2151F4815C05AA2ED3F80A2ED7F
00A248147E007C5C007E13015D4A5A003E495A6C495A4A5A260F803EC7FC3807C0FC3801
FFF038003F80242977A72E>I<903903E001F890390FF807FE903A1E7C1E0F80903A1C3E
3C07C0013C137801389038E003E0EB783F017001C013F0ED80019038F07F0001E015F814
7E1603000113FEA2C75AA20101140717F05CA20103140F17E05CA20107EC1FC0A24A1480
163F010F15005E167E5E131F4B5A6E485A4B5A90393FB80F80DA9C1FC7FCEC0FFCEC03E0
49C9FCA2137EA213FEA25BA21201A25BA21203A2387FFFE0B5FCA22D3A80A72E>I<D801
F013FC3A07FC07FF803A0F3E0F03C0260E1F1C13E0001EEB380F001C1370003CEBE01F12
3814C0D8783F14C00070903880070092C7FC91C8FC12F05BEA007EA313FE5BA312015BA3
12035BA312075BA3120F5BA3121F5B0007C9FC232979A726>114
D<EC7F80903801FFE0903807C0F890381F003C013E131C013C131E017C133E49137E15FE
A2000114FCA215706D13007FEBFFC014FC6C13FF15806D13C06D13E0010F13F01300140F
14071403120C123F387F80011403D8FF0013E0A300FCEB07C000F0EB0F8012700078EB1F
006C133C381F01F83807FFE0C690C7FC1F297AA725>I<EB01C0EB03F01307A25CA2130F
A25CA2131FA25CA2133FA291C7FCA2007FB51280B6FC1500D8007EC7FC13FEA25BA21201
A25BA21203A25BA21207A25BA2120FA25BA2121F141C1380A2003F133C1438EB00781470
14F05C495AEA1F03495A6C48C7FCEA07FCEA01F0193A78B81E>I<137C48B4141C26038F
80137EEA0707000E7F001E15FE121CD83C0F5C12381501EA781F007001805BA2D8F03F13
03140000005D5B017E1307A201FE5C5B150F1201495CA2151F0003EDC1C0491481A2153F
1683EE0380A2ED7F07000102FF13005C01F8EBDF0F00009038079F0E90397C0F0F1C9039
1FFC07F8903907F001F02A2979A731>I<903903F001F890390FFC07FE90393C1E0E0F90
26780F1C138001F0EBB83FD801E013F89039C007F07FEA0380000714E0D9000F14004815
1C000E4AC7FCA2001E131FA2C75BA2143F92C8FCA35C147EA314FE4A131CA30101143C00
1E1538003F491378D87F811470018314F000FF5D9039077801C039FE0F7C033A7C0E3C07
8027783C1E1EC7FC391FF80FFC3907E003F029297CA72A>120 D<137C48B4143826038F
8013FCEA0707000E7F001E1401001C15F8EA3C0F12381503D8781F14F000701380A2D8F0
3F1307020013E012005B017E130F16C013FE5B151F1201491480A2153F000315005BA25D
157EA315FE5D00011301EBF8030000130790387C1FF8EB3FF9EB07E1EB00035DA2140700
0E5CEA3F80007F495AA24A5AD8FF0090C7FC143E007C137E00705B387801F0383803E038
1E0FC06CB4C8FCEA03F8263B79A72C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi8 8 10
/Fh 10 121 df<12E012F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FE0EB03F8EB00
FC143FEC0FC0EC07F0EC01FCEC007FED1FC0ED07F0ED01FCED007FEE1FC01607161FEE7F
00ED01FCED07F0ED1FC0037FC7FCEC01FCEC07F0EC0FC0023FC8FC14FCEB03F8EB0FE0EB
3F8001FEC9FCEA03F8EA0FE0EA3F8000FECAFC12F812E02A2B7AA537>62
D<1670A216F01501A24B7EA21507150DA2151915391531ED61FC156015C0EC0180A2EC03
005C14064A7F167E5C5CA25C14E05C4948137F91B6FC5B0106C7123FA25B131C13184915
80161F5B5B120112031207000FED3FC0D8FFF8903807FFFEA22F2F7DAE35>65
D<1307EB0F80EB1FC0A2EB0F80EB070090C7FCA9EA01E0EA07F8EA0E3CEA1C3E12381230
1270EA607EEAE07C12C013FC485A120012015B12035BA21207EBC04014C0120F13801381
381F01801303EB0700EA0F06131EEA07F8EA01F0122E7EAC18>105
D<15E0EC01F01403A3EC01C091C7FCA9147CEB03FE9038078F80EB0E07131C013813C013
30EB700F0160138013E013C0EB801F13001500A25CA2143EA2147EA2147CA214FCA25CA2
1301A25CA21303A25CA2130700385BEAFC0F5C49C7FCEAF83EEAF0F8EA7FF0EA1F801C3B
81AC1D>I<137CEA0FFCA21200A213F8A21201A213F0A21203A213E0A21207A213C0A212
0FA21380A2121FA21300A25AA2123EA2127EA2127CA2EAFC08131812F8A21338133012F0
1370EAF860EA78E0EA3FC0EA0F000E2F7DAD15>108 D<3907C007E0391FE03FF83918F8
783E393879E01E39307B801F38707F00126013FEEAE0FC12C05B00815C0001143E5BA200
03147E157C5B15FC0007ECF8081618EBC00115F0000F1538913803E0300180147016E000
1F010113C015E390C7EAFF00000E143E251F7E9D2B>110 D<EB07E0EB3FF8EB781EEBF0
063801E0073803C00F141FA20007131E140CEBE00013F8EBFF806C13E06C13F06C13F8EB
3FFC13011300147C0078133C12FCA2147C48137800E013F814F0386001E0387807C0381F
FF00EA07F8181F7C9D21>115 D<130E131FA25BA2133EA2137EA2137CA213FCA2B512F8
A23801F800A25BA21203A25BA21207A25BA2120FA25BA2001F1310143013001470146014
E0381E01C0EB0380381F0700EA0F0EEA07FCEA01F0152B7EA919>I<D801E01370D807F8
13F8380E3C01D81C3E13FC1238003013000070147CEA607ED8E07C133812C013FC485A00
00143012015B1570000314605B15E015C01207EBC00115801403EC070000031306EBE00E
00015BEBF07838007FE0EB1F801E1F7E9D22>118 D<013F137C9038FFC1FF3A01C1E383
803A0380F703C0390700F60F000E13FE4813FC12180038EC0700003049C7FCA2EA200100
005BA313035CA301075B5D14C000385CD87C0F130600FC140E011F130C011B131C39F03B
E038D8707113F0393FE0FFC0260F803FC7FC221F7E9D28>120 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmex10 10 1
/Fi 1 81 df<BB12FC86A3D87FC0C9001F7FF0007F6C6C17076C6C050113806C6CEF007F
1A1F6C6CF00FC06C6C18076C6C1803F201E06C6D17006D6C1860013F19706E18306D7E6D
6C18181B006D7E6D7E6D7EA26D7F6E7E6E7EA26E7E6E7E6E7EA26E7E6E7E80826F7E6F7E
A26F7E6F7E6F5A5EA24B5A5E4BCBFC153E157E5D5D4A5A4A5A14075D4A5A4ACCFC143E14
7E147C5C4948181801031930495A4A18704948186049CC12E0491801017EF003C0017C18
0749180F4848F01F800003197F49EF01FF4848050713004848173F48CA000FB5FC48BA5A
A25ABB5AA24D537B7F58>80 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmsy10 10.95 8
/Fj 8 104 df<007FB812FEBAFCA26C17FE3804799847>0 D<EB0FFCEB3FFF90B512C000
0314F04880488048804880A2481580A3B712C0AA6C1580A36C1500A26C5C6C5C6C5C6C5C
C614C0013F90C7FCEB0FFC22227BA72D>15 D<0203B612FE023F15FF91B8FC010316FED9
0FFEC9FCEB1FE0EB7F8001FECAFCEA01F8485A485A485A5B48CBFCA2123EA25AA21278A2
12F8A25AA87EA21278A2127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FE0EB
0FFE0103B712FE010016FF143F020315FE91CAFCAE001FB812FE4817FFA26C17FE384879
B947>18 D<180E183F18FFEF03FEEF0FF8EF3FE0EFFF80933803FE00EE0FF8EE3FE0EEFF
80DB03FEC7FCED0FF8ED7FE0913801FF80DA07FEC8FCEC1FF8EC7FC04948C9FCEB07FCEB
1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7FC0EA1FF0EA07FCEA01FF3800
7FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FE913801FF809138007FE0ED1FF8ED
03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FEEF00FF183F18
0E1800AE007FB812FEBAFCA26C17FE384879B947>20 D<127012FCB4FCEA7FC0EA1FF0EA
07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FE913801FF809138
007FE0ED1FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03
FEEF00FFA2EF03FEEF0FF8EF3FE0EFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FC
ED0FF8ED7FE0913801FF80DA07FEC8FCEC1FF8EC7FC04948C9FCEB07FCEB1FF0EB7FC048
48CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAE007FB812FEBAFCA26C17FE384879
B947>I<0203B512F8023F14FC91B6FC010315F8D90FFEC8FCEB1FE0EB7F8001FEC9FCEA
01F8485A485A485A5B48CAFCA2123EA25AA21278A212F8A25AA2B812F817FCA217F800F0
CAFCA27EA21278A2127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FE0EB0FFE
0103B612F8010015FC143F020314F82E3679B13D>50 D<153FEC03FFEC0FE0EC3F80EC7E
00495A5C495AA2495AB3AA130F5C131F495A91C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA
03F8EA00FE133F806D7E130F801307B3AA6D7EA26D7E80EB007EEC3F80EC0FE0EC03FFEC
003F205B7AC32D>102 D<12FCEAFFC0EA07F0EA01FCEA007E6D7E131F6D7EA26D7EB3AA
801303806D7E1300147FEC1FC0EC07FEEC00FFEC07FEEC1FC0EC7F0014FC1301495A5C13
075CB3AA495AA2495A133F017EC7FC485AEA07F0EAFFC000FCC8FC205B7AC32D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmmi10 10.95 29
/Fk 29 123 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>58
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C798919>I<180E183F18FFEF03FEEF0FF8EF3FE0EFFF809338
03FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED1FF8ED7FE0913801FF80DA07FEC8FCEC1FF0
EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7FC0
EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FE913801
FF809138007FE0ED1FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF
0FF8EF03FEEF00FF183F180E383679B147>I<127012FCB4FCEA7FC0EA1FF0EA07FCEA01
FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF8EC07FE913801FF809138007FE0ED
0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FEEF00FF
A2EF03FEEF0FF8EF3FE0EFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED
7FE0913801FF80DA07FEC8FCEC1FF8EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA
07FCEA1FF0EA7FC048CBFC12FC1270383679B147>62 D<17075F84171FA2173F177FA217
FFA25E5EA24C6C7EA2EE0E3F161E161C1638A21670A216E0ED01C084ED0380171FED0700
5D150E5DA25D157815705D844A5A170F4A5A4AC7FC92B6FC5CA2021CC7120F143C14384A
81A24A140713015C495AA249C8FC5B130E131E4982137C13FED807FFED1FFEB500F00107
B512FCA219F83E417DC044>65 D<DC1FF81307923801FFFE030F9038FF800E923A7FF007
E01E4A48C7EAF03EDA03FCEC787EDA0FF0EC3CFCDA3FC0141F4A48140F4AC8FC4948ED07
F8EB07F849481503131F4A16F049481501495A13FF4890C913E05B1203485A19C0485AA2
485A95C7FC123F5BA2127F5BA312FF5BA590CCFC183CA21838A21878187018F06C6C5E17
014D5A003F5F6D15074DC7FC001F161E6C6C5D6D5D6C6C5D00034B5AD801FEEC07C06C6C
4AC8FCD97FC0137E90391FF803F80107B512E0010114809026001FF8C9FC40427BBF41>
67 D<DC3FF0130E923803FFFE031F9038FF801C923A7FF00FC03C913B01FF0001E07CDA
07FC903800F0FCDA0FF0EC79F8DA3FC0143F4A48141F4AC8120FD903FC16F0495A494815
07495A013F17E04A1503495A49C9FC4818C05B1203485A1980485AA2485A95C7FC123F5B
A2127F5BA312FF5BA3043FB512E0A290C8FC9339001FF800170F60A2171FA260A26C6C15
3FA2606C7E177F121F6D5E6C6C15FF00075D6C6C5C6C6CDA07BFC7FC6CB4EC1F1FD97FC0
EB7E0F90391FF803F80107B5EAE00601010280C8FC9026001FF8C9FC3F427BBF48>71
D<EE3FF00303B5FC92391FC03FC092397E0007E0DA01F8EB01F8DA07E06D7E4A48147E02
3FC87E027EED1F804A16C0D903F8150F494816E0495A4948ED07F0A2494816F849C9FC5B
48481603A2484817FCA2485A000F17075B121FA25B123F19F84848160FA44848EE1FF0A3
F03FE0A390CAEA7FC0A2F0FF80A219004D5A1703604D5A6C7E4D5A4D5A003F5F4D5A6C6C
4BC7FC17FE6C6C4A5A4C5A6C6CEC07E06C6CEC1FC06C6C4A5A6C6C02FEC8FC90393F8003
F890390FE01FE00103B5C9FC9038007FF03E427BBF45>79 D<B6020FB5FCA219FE000301
C0020013E06C90C9EA7F00183E183C6C5F187060A24D5A17036E5D4DC7FC017F5D170E5F
A25F17786E14705F133F4C5A4C5AA24CC8FC5E6E130E5EA2011F5C167816705E15015E6E
485AA2010F49C9FC5D150E5DA25D6E5AA201075B14F95DECFB80A202FFCAFC5CA25C1303
5C5CA25CA25C40407BBD35>86 D<EC1F80ECFFE0903903F0707090390FC039F890381F80
1D90383F000F017E5C5B00011407485A48485CA2485A001F140F5E485AA2151F007F5D5B
A2153F00FF92C7FC90C7FCA25D92387E03805AA215FEEDFC07007E0101140014035E6C01
07130E140E3A1F801C7C1C000F13783A07C1F03E383A01FFC01FF03A007F0007C029297D
A730>97 D<EC07F0EC7FFE903801FC0F903907E0038090390FC001C0D93F8013E090387F
000701FE131F485A485A16C0485A000F15804990C7FC121F485AA3127F5BA312FF90C9FC
A6007E1560007F15E01501ED03C06CEC07806DEB0F00001F141E6C6C137C3907E001F039
01F01FC06CB5C7FCEB1FF023297DA727>99 D<EC1FE0ECFFFC903803F01E90380FC00F90
393F800780D97E0013C0491303EA03F8120749130748481480121F49130F003FEC1F0015
3E397F8001FCEC1FF0B6128002F8C7FC90C9FCA45AA616C01501007E1403ED07806CEC0F
00151E6C5C6C6C13F83907C003E03903E03F802600FFFEC7FCEB3FE022297CA72A>101
D<163EEEFFC0923803E1E0923807C0F0ED0F811687ED1F8F160F153FA217E092387E0380
93C7FCA45DA514015DA30103B512FCA390260003F0C7FCA314075DA4140F5DA5141F5DA4
143F92C8FCA45C147EA414FE5CA413015CA4495AA35CEA1E07127F5C12FF495AA200FE90
C9FCEAF81EEA703EEA7878EA1FF0EA07C02C537CBF2D>I<143C14FEA21301A314FCEB00
701400AD137E3801FF803803C7C0EA0703000F13E0120E121C13071238A2EA780F007013
C0A2EAF01F14801200133F14005B137EA213FE5BA212015B0003130E13F0A20007131EEB
E01CA2143CEBC0381478147014E013C13803E3C03801FF00EA007C173E7EBC1F>105
D<ED01C0ED07F0A2150FA316E0ED038092C7FCADEC03E0EC0FF8EC3C3EEC701EECE01FEB
01C001031480EB0780140049133F010E1400131E131C013C5BA290C7127EA215FEA25DA2
1401A25DA21403A25DA21407A25DA2140FA25DA2141FA25DA2143FA292C7FCA25C147EA2
001C13FE007F5BEAFF015C495A495A48485A38F81F80D8783EC8FCEA3FF8EA0FE0245081
BC25>I<EB01FC13FF5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C9
FC16FC49EB03FE92380F0780017EEB3C0FED703F01FE13E0913801C07F9038FC0380EC07
000001010E14004A131C494890C7FC5C00035BEBF9C0495A01FFC9FC5A14F0EBE3FE9038
E07F80000FEB1FC06E7EEBC00781001F1303160E1380A2003F151E0207131C010013E0A2
485DA2007E01031378167000FE01015B15F1489038007F800038023EC7FC29407CBE2F>
I<EB07F0EA03FF14E0A2EA000FA214C0A2131FA21480A2133FA21400A25BA2137EA213FE
A25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25A
EB0380127EA212FE130700FC1300A25B130EA2EA7C1C133CEA3E38EA1FF0EA07C014407D
BE1B>I<D801F0D90FF0EB03F8D807FCD93FFEEB1FFFD80F1FD9F01F90387C0F80000E90
3C03C00F80E007C0271E0F87009039C3C003E0001C018E903807C780003C01DCDAEF007F
003801F814EE4A14FCD8781F5D00705B4A5CA200F04949481307013F60000090C75BA204
1F140F4960017E5D191F043F5D13FE4992C7123F97C7FC5E000195387F01C049027E147E
A204FEECFE03000306FC1380495C1A07030103F81300000761494A150E620303163C000F
F07C78494AEC3FE0D80380D900E0EC0F804A297EA750>I<D801F0EB0FF0D807FCEB3FFE
D80F1FEBF01F000E903903C00F80271E0F87007F001C018E1307003C01DC80003813F85C
EA781F00705B5CA200F049130F013F5D000090C7FCA2161F495D137E163F94C7FC13FE49
5C167EA200019238FE03804914FCA203011307000303F813005B5FEEF00E0007161E4915
1C5F1778000F6E6C5A49EC7FC0D80380021FC7FC31297EA737>I<D907C013FE903A0FF0
03FF80903A1C7C0F07E0903A383C1C03F0903A783E7801F80170EBF0009026F03FE013FC
01E05B4B13FE0001017F147E01C090C7FC147E17FF000313FEA2C75AA201015C17FE5CA2
0103140317FC5CA20107EC07F8A24A14F0160F010F15E0161F17C0EE3F80011F15006E13
7E5E9138B801F890393FBC03E091389E0FC0DA07FFC7FCEC01F849C9FCA2137EA213FEA2
5BA21201A25BA21203A2B512E0A3303A84A72E>112 D<91381F800C9138FFE01C903903
F0707C90390FC0387890391F801CF890383F000F137E4914F000011407485A485A16E048
5A121F150F484814C0A3007F141F491480A300FF143F90C71300A35D48147EA315FE007E
495A1403A26C13074A5A381F801D000F13793807C1F33901FFC3F038007F03130014075D
A3140F5DA3141F5DA2143F147F90381FFFFE5BA2263A7DA729>I<D801F0EB3F80D807FC
EBFFE03A0F1F03C0F0000E90380F00F8391E0F9E03001C13BC003CEBF807003813F0A226
781FE013F000709038C001C092C7FC5C12F0133F000090C8FCA35B137EA313FE5BA31201
5BA312035BA312075BA3120F5BEA038025297EA729>I<EC1FC0ECFFF8903803E03C9038
07800E90381E0007168049130F49131F153FA201F81400A2151C6D90C7FC7FEBFFE014FE
90387FFFC06D7F6D13F86D7F13039038001FFE14031400157E000C143E123F487EA248C7
123CA25D12FC00F05C0070495A0078495A6C495A260F803EC7FC3803FFF838007FC02129
7CA72B>I<147014FC1301A25CA21303A25CA21307A25CA2130FA25CA2007FB512F0B6FC
15E039001F8000133FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203A25BA21207
EC01C013E01403000F1480A2EBC0071500140E141E5C000713385C3803E1E03801FF80D8
003EC7FC1C3A7EB821>I<137C48B4EC03802603C7C0EB0FC0EA0703000F7F000E151F12
1C010715801238163FEA780F0070491400A2D8F01F5C5C0000157E133F91C712FEA2495C
137E150113FE495CA215030001161C4914F0A21507173CEEE038150F031F137800001670
6D133F017C017313F0017E01E313E0903A3F03C1F1C0903A0FFF007F80D901FCEB1F002E
297EA734>I<017E147848B4EB01FC2603C7C013FED807031303000F13E0120E121C0107
130100381400167ED8780F143E00705B161EEAF01F4A131C1200133F91C7123C16385B13
7E167801FE14705B16F016E0120149EB01C0A2ED0380A2ED0700A20000140E5D6D133C01
7C5B6D5B90381F03C0903807FF80D901FCC7FC27297EA72C>I<017CEE038048B40207EB
0FE02603C7C090391F801FF0EA0703000F7F000E153F001C16000107160F003817074C13
03D8780F027E130100705B1800D8F01F14FE4A4914E01200133FDA000114014C14C05B13
7E0303140301FE4A14805BA2F0070000011407494A5B180EA260A2030F5C12006D011F5C
017C496C5B017E0139495A6D903870F80390281F81E07C0FC7FC903A07FFC01FFE010090
380007F03C297EA741>I<D901F8133FD907FEEBFFE0903A1E0F83C0F0903A3807C780F8
90397003CF0301E013FED801C0EBFC071203018013F8D8070015F0EE01C0000E4AC7FCA2
001E1307A2C75BA2140F5DA3141F5DA3143F92380001C0A34A1303001E1680003F017E13
07267F80FE14005ED8FF81141ED901DF131CD8FE035C3A7C078F80F03A3C0F07C1E03A1F
FC03FF802707F0007EC7FC2D297EA734>I<02F8130ED903FE131ED90FFF131C49EB803C
49EBC0784914F090397E07F1E09038F800FF49EB1FC049EB07800001EC0F006C48131E90
C75A5D5D4A5A4A5A4A5A4AC7FC143E14785C495A495A495A49C8FC011E14E05B5B491301
4848EB03C0485AD807F8EB078048B4131F3A1F87E07F00391E03FFFE486C5B00785CD870
005B00F0EB7FC048011FC7FC27297DA72A>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr10 10.95 74
/Fl 74 124 df<4AB4EB0FE0021F9038E03FFC913A7F00F8FC1ED901FC90383FF03FD907
F090397FE07F80494801FF13FF4948485BD93F805C137F0200ED7F00EF003E01FE6D91C7
FC82ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35>11
D<4AB4FC021F13C091387F01F0903901FC0078D907F0131C4948133E494813FF49485A13
7F1400A213FE6F5A163893C7FCAA167FB8FCA33900FE00018182B3AC486CECFF80007FD9
FC3F13FEA32F407FBF33>I<4AB47E021F13F791387F00FFEB01F8903807F001EB0FE0EB
1FC0EB3F80137F14008101FE80AEB8FCA3C648C77EB3AE486CECFF80007FD9FC3F13FEA3
2F407FBF33>I<4AB4ECFF80021FD9C00F13E0913B7F01F03F80F8903C01F80078FE003C
D907F0D93FF8130E49484948131F49484948EB7F804948484913FF137F02005CA201FE92
C7FC6FED7F0070141C96C7FCAAF13F80BBFCA3C648C76CC7FC197F193FB3AC486C4A6CEB
7FC0007FD9FC3FD9FE1FB5FCA348407FBF4C>I<133E133F137F13FFA2EA01FEEA03FCEA
07F813F0EA0FE0EA1FC01380EA3E005A5A1270122010116EBE2D>19
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C79BE19>39 D<1430147014E0EB01C0EB03801307EB0F00131E
133E133C5B13F85B12015B1203A2485AA2120F5BA2121F90C7FCA25AA3123E127EA6127C
12FCB2127C127EA6123E123FA37EA27F120FA27F1207A26C7EA212017F12007F13787F13
3E131E7FEB07801303EB01C0EB00E014701430145A77C323>I<12C07E12707E7E121E7E
6C7E7F12036C7E7F12007F1378137CA27FA2133F7FA21480130FA214C0A3130714E0A613
0314F0B214E01307A614C0130FA31480A2131F1400A25B133EA25BA2137813F85B12015B
485A12075B48C7FC121E121C5A5A5A5A145A7BC323>I<1506150FB3A9007FB912E0BA12
F0A26C18E0C8000FC9FCB3A915063C3C7BB447>43 D<121EEA7F8012FF13C0A213E0A312
7FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B1C798919>
I<B512FEA617067F961E>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<ED
0180ED03C01507A21680150FA216005DA2151E153EA2153C157CA2157815F8A25D1401A2
5D1403A25D1407A25D140FA24AC7FCA2141E143EA2143C147CA2147814F8A25C1301A25C
1303A25C1307A25C130FA291C8FC5BA2131E133EA25BA2137813F8A25B1201A25B1203A2
5B1207A25B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A1260225B7BC32D
>I<EB01FE90380FFFC090383F03F090387C00F849137C48487F48487F4848EB0F80A200
0F15C04848EB07E0A3003F15F0A290C712034815F8A64815FCB3A26C15F8A56C6CEB07F0
A3001F15E0A36C6CEB0FC0A26C6CEB1F80000315006C6C133E6C6C5B017C5B90383F03F0
90380FFFC0D901FEC7FC263F7DBC2D>I<EB01C013031307131F137FEA07FFB5FC139FEA
F81F1200B3B3ACEB7FF0B612F8A31D3D78BC2D>I<EB07FC90383FFF8090B512E03903F0
1FF83907C007FC390F0001FE001E6D7E001C1580003CEC7FC05AED3FE01270B4FC6DEB1F
F07FA56C5A6CC7FC120CC813E0153FA216C0157F168015FF16004A5A5D4A5A4A5A5D4A5A
4A5A4AC7FC147E147C5C495A495A495A495A49C71270133E133C5B4914E0485A485A485A
48C7120148B6FCA25A4815C0B7FCA3243D7CBC2D>I<EB07FC90383FFF809038F80FE039
01E003F839078001FCD80F007F000E6D7E001E1580D81F80137F486C14C07FA27F5BA212
1F6C5AC8138015FF1600A24A5AA24A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038000F
E0EC07F86E7E6E7E6E7E1680ED7FC0A216E0153FA216F0A2120C123F487E487EA316E0A2
49137F6CC713C01278EDFF807E6C4913006C495A3907C007FC3903F80FF0C6B55A013F13
80D907F8C7FC243F7CBC2D>I<150E151E153EA2157EA215FE1401A21403EC077E140614
0E141CA214381470A214E0EB01C0A2EB0380EB0700A2130E5BA25B5BA25B5B1201485A90
C7FC5A120E120C121C5AA25A5AB8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<0006
1403D80780131F01F813FE90B5FC5D5D5D15C092C7FC14FCEB3FE090C9FCACEB01FE9038
0FFF8090383E03E090387001F8496C7E49137E497F90C713800006141FC813C0A216E015
0FA316F0A3120C127F7F12FFA416E090C7121F12FC007015C012780038EC3F80123C6CEC
7F00001F14FE6C6C485A6C6C485A3903F80FE0C6B55A013F90C7FCEB07F8243F7CBC2D>
I<EC1FE0ECFFF8903803F03E90380FC00F90391F000780133E017EEB1FC049133F484813
7F12035B12074848EB3F80ED1F00001F91C7FC5BA2123FA3485AA214FE903887FF8039FF
8F07E090389C01F09038B800FC01B0137E13F0497F16804914C0A2ED1FE0A34914F0A512
7FA6123F6D14E0A2121FED3FC0A26C6C1480A20007EC7F006C6C137E6C6C5B6C6C485A90
387E07F06DB45A010F1380D903FCC7FC243F7CBC2D>I<1238123C123F90B612FCA316F8
5A16F016E00078C712010070EC03C0ED078016005D48141E151C153C5DC8127015F04A5A
5D14034A5A92C7FC5C141EA25CA2147C147814F8A213015C1303A31307A3130F5CA2131F
A6133FAA6D5A0107C8FC26407BBD2D>I<EB03FC90381FFF8090387C07E09038F001F839
01E0007C48487F48487F48C7FCED0F80121E16C0003E1407A4123FA26DEB0F807F6C6C13
1F6D140001FC133E6C6C5B9038FF80786C6D5A6CEBF3E06CEBFF806C91C7FC133F6D13C0
6D7F013F13F801787F48486C7E3903E01FFF48486C1380260F800313C048487E48903800
7FE0003E143F007E141F007CEC0FF01507481403A31501A46C15E0007C1403A2007E15C0
6C14076CEC0F806DEB1F006C6C133ED807F05B3901FC03F86CB512E0011F1380D903FCC7
FC243F7CBC2D>I<EB03FCEB1FFF90387E07C09038FC03F048486C7E48486C7E4848137C
000F147E4848137F81003F15805B007F15C0A2151F12FF16E0A516F0A5127F153FA36C7E
A2001F147F120F6C6C13FF6D13DF000313013900F8039F90387E0F1FD91FFE13E0EB07F0
90C7FCA2ED3FC0A41680157FD80F801400487E486C13FEA24A5A5D49485AEB8007391E00
0FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC0243F7CBC2D>I<121EEA7F80A2
EAFFC0A4EA7F80A2EA1E00C7FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2779A619
>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121E127FEAFF80A213C0A4127F12
1E1200A412011380A3120313005A1206120E120C121C5A1230A20A3979A619>I<007FB9
12E0BA12F0A26C18E0CDFCAE007FB912E0BA12F0A26C18E03C167BA147>61
D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A291380381FEA34AC6
7EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6FCA24981913880
0001A249C87EA24982010E157FA2011E82011C153FA2013C820138151FA2017882170F13
FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC044>65 D<B712FCEEFF8017F000
01903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171F
A318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE091B6C7FC17E091C7EA07
FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707A218FEA718FC170FA2EF
1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A17E094C7FC373E7DBD40
>I<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007E03E9139FF8000F8D903
FEC7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A91C81201484815001203
4848167E5B000F173EA24848161EA2123F5B180E127FA349160012FFAC127F7F180EA212
3FA27F001F171E181C6C7EA20007173C6D16386C6C1678000117706C6C16F06EEC01E06D
6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600FF8013F891393FF007F0
020FB512C0020391C7FC9138003FF037427BBF42>I<B712FCEEFF8017E000019039C000
1FF86C6C48EB03FEEE00FF717E717EEF0FE084717E717E170184717EA21980187F19C0A3
F03FE0A519F0AB19E0A5F07FC0A21980A218FF19004D5AA24D5A6017074D5A4D5AEF7FC0
4DC7FCEE03FE48486CEB1FF8B85A178004FCC8FC3C3E7DBD45>I<B912E0A300019038C0
00016C6C48EB001FEF0FF01703A217011700A31870A41838161CA41800A2163CA2167C16
FC150391B5FCA3EC80031500167C163CA2161CA21807A3180E93C7FCA4181E181CA2183C
A2187CA218F8170117031707171F48486CEB01FFB912F0A3383E7DBD3E>I<B91280A300
019038C000036C6C48EB007FEF1FC0170F1707A21703A31701A4EF00E0A21638A31800A3
1678A216F81501150791B5FCA3EC8007150115001678A21638A693C8FCAF3801FFE0B612
F0A3333E7DBD3B>I<B6D8C01FB512F8A3000101E0C7383FFC0026007F80EC0FF0B3A691
B7FCA30280C7120FB3A92601FFE0EC3FFCB6D8C01FB512F8A33D3E7DBD44>72
D<B612F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0A31C3E7EBD21>I<011FB512FCA3D9
000713006E5A1401B3B3A6123FEA7F80EAFFC0A44A5A1380D87F005B007C130700385C00
3C495A6C495A6C495A2603E07EC7FC3800FFF8EB3FC026407CBD2F>I<B600C090387FFF
FCA3000101E0C7000F138026007F80913807FE0018F818E0604D5A4DC7FC173E5F5F4C5A
4C5A4C5A4C5A4CC8FC163E5E5E4B5A4B5AED07804B7E151F4B7E4B7E15FF913881EFF891
3883C7FCEC878791388F03FE91389E01FF14BCDAF8007F4A6D7E5C4A6D7E4A6D7EA2707E
707EA2707E707EA2707F717E84173F717E717EA2717E848419802601FFE04A13C0B600C0
90B6FCA3403E7DBD47>I<B612F8A3000101E0C9FC38007F80B3B0EF0380A517071800A4
5FA35FA25F5F5F4C5A160748486C133FB8FCA3313E7DBD39>I<B500C093383FFFF0A300
016D93387FF800D8007F18E0D977F016EFA3D973F8ED01CFA2D971FCED038FA3D970FEED
070FA26E150E80A26E6C141CA36E6C1438A26E6C1470A36E6C14E0A26E6CEB01C0A36E6C
EB0380A36E6CEB0700A2037F130EA36F6C5AA26F6C5AA36F6C5AA25FED07F0A2923803F9
C0A36FB45AA26F90C7FCA213F8486C147ED807FFEF3FF8B500F8013C011FB512F0A34C3E
7DBD53>I<B56C91B512F88080D8007F030713006EEC01FC6E6E5A1870EB77FCEB73FEA2
EB71FF01707FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7E
A26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF
7013F0A2177F173FA2171F170FA2170701F81503487ED807FF1501B500F81400A218703D
3E7DBD44>I<ED7FE0913807FFFE91391FC03F8091397E0007E04948EB03F8D907F0EB00
FE4948147F49486E7E49486E7E49C86C7E01FE6F7E00018349150300038348486F7EA248
486F7EA2001F188049167F003F18C0A3007F18E049163FA300FF18F0AC007F18E06D167F
A4003F18C0A26C6CEEFF80A36C6C4B1300A26C6C4B5A00035F6D150700015F6C6C4B5A6D
5E6D6C4A5A6D6C4A5A6D6C4AC7FC6D6C14FED901FCEB03F8D9007FEB0FE091391FC03F80
912607FFFEC8FC9138007FE03C427BBF47>I<ED7FE0913807FFFE91391FC03F8091397F
000FE0D901FCEB03F8D907F0EB00FE4948147F49486E7E49486E7E49C86C7E498248486F
7E49150300038348486F7EA2000F834981001F1880A24848EE7FC0A3007F18E0A249163F
A200FF18F0AC007F18E0A26D167FA3003F18C0A26C6CEEFF80A3000F18006D5D0007DA0F
805B6C6C90393FE003FCED70706C6C496C485A6C6C48486C485A017FD9800E5BD93F8190
38061FC0D91FC19038073F80D90FE14AC7FCD907F1EB03FE902601FDC013F8903A007EE0
07E091271FF03FC013180207B5FC9139007FE1E0DB0001143883711378A2706C13F0EFFF
0318FFA27113E0A37113C0711380711300715AEF01F83D527BBF47>81
D<B712C016FCEEFF800001D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717E
A284A760177F606017FF95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F0913880
01FCED003FEE1FC0707E707E83160383160183A383A484A4F0C004190EA28218E0057F13
1E2601FFE0161CB600C0EB3FF094381FF83805071370CA3801FFE09438003F803F407DBD
43>I<D907FC130C90391FFF801C017FEBF03C3901FC03F83A03F0007E7CD807C0EB1FFC
4848130F001F140748C71203003E1401007E1400A2007C157C12FCA2163CA36C151CA27E
A26C6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0
010714F0EB007F020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163F
A27EA3163E7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF0
7F803F8090391FFFFE00D8E00713F839C0007FC028427BBF33>I<003FB91280A3903AF0
007FE001018090393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF00
E0A5C81600B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<B500FE017FB5D88007B5FCA3
000301C0010101E0C713F86C90C849EC3FE07148EC0F807E7215006E143F017F190E84A2
6D6C60A24D7E6D6C60A2EFE7F86D6C60A2933801C3FC6E18F001076104037F6E02811401
01036104077F17006D6C4D5AA2040EEB7F806D6C4DC7FCA24CEB3FC0DA7F80160EA24CEB
1FE003C0161E023F171C047814F0DBE070010F133C021F173804F014F84C1307DA0FF05E
A2DBF1C0EB03FCDA07F95EA2DBFB80EB01FEDA03FF6F5AA293C8FCA26E5FA24B157F0200
94C8FCA24B81037C153EA20378151E0338151C58407EBD5D>87 D<EAFFFCA4EAF000B3B3
B3B3ABEAFFFCA40E5B77C319>91 D<EAFFFCA4EA003CB3B3B3B3ABEAFFFCA40E5B7FC319
>93 D<EB0FF8EBFFFE3903F01F8039078007E0000F6D7E9038E001F8D81FF07F6E7EA315
7F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB7F803801FC00EA07F8EA0FE0485A
485AA248C7FCEE038012FEA315FFA3007F5BEC03BF3B3F80071F8700261FC00E13CF3A07
F03C0FFE3A01FFF807FC3A003FC001F0292A7DA82D>97 D<EA01FC12FFA3120712031201
B1EC03FC91381FFF8091387C07E09039FDE001F09039FFC000FC4A137E91C77E49158049
141F17C0EE0FE0A217F0A2160717F8AA17F0A2160FA217E0161F17C06D1580EE3F006D5C
6E13FE9039F3C001F89039F1E003F09039E0780FC09026C03FFFC7FCC7EA07F82D407EBE
33>I<49B4FC010F13E090383F00F8017C131E4848131F4848137F0007ECFF80485A5B12
1FA24848EB7F00151C007F91C7FCA290C9FC5AAB6C7EA3003FEC01C07F001F140316806C
6C13076C6C14000003140E6C6C131E6C6C137890383F01F090380FFFC0D901FEC7FC222A
7DA828>I<ED01FC15FFA3150715031501B114FF010713E190381F80F990387E003D4913
1FD803F81307485A49130348481301121F123F5B127FA290C7FCA25AAA7E7FA2123FA26C
7E000F14037F000714076C6C497E6C6C497ED8007C017913F890383F01F190380FFFC190
3A01FE01FC002D407DBE33>I<EB01FE90380FFFC090383F03F09038FC01F848486C7E48
48137E48487F000F158049131F001F15C04848130FA2127F16E090C7FCA25AA290B6FCA2
90C9FCA67EA27F123F16E06C7E1501000F15C06C6C13036DEB07806C6C1400C66C131E01
7E5B90381F80F8903807FFE0010090C7FC232A7EA828>I<EC1FC0EC7FF8903801F83C90
3807E07E90380FC0FFEB1FC1EB3F811401137FEC00FE01FE137C1500AEB6FCA3C648C7FC
B3AE487E007F13FFA320407EBF1C>I<167C903903F801FF903A1FFF078F8090397E0FDE
1F9038F803F83803F001A23B07E000FC0600000F6EC7FC49137E001F147FA8000F147E6D
13FE00075C6C6C485AA23901F803E03903FE0FC026071FFFC8FCEB03F80006CAFC120EA3
120FA27F7F6CB512E015FE6C6E7E6C15E06C810003813A0FC0001FFC48C7EA01FE003E14
0048157E825A82A46C5D007C153E007E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800
FE017FC7FC90383FFFFC010313C0293D7EA82D>I<EA01FC12FFA3120712031201B1EC01
FE913807FFC091381E07E091387803F09138E001F8D9FDC07F148001FF6D7E91C7FCA25B
A25BB3A6486C497EB5D8F87F13FCA32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA
01E0C8FCACEA01FC127FA3120712031201B3AC487EB512F0A3143E7DBD1A>I<1478EB01
FEA2EB03FFA4EB01FEA2EB00781400AC147FEB7FFFA313017F147FB3B3A5123E127F38FF
807E14FEA214FCEB81F8EA7F01387C03F0381E07C0380FFF803801FC00185185BD1C>I<
EA01FC12FFA3120712031201B292B51280A392383FFC0016E0168093C7FC153C5D5D4A5A
EC07C04A5A4AC8FC143E147F4A7E13FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E14
01816E7E81826F7E151F826F7EA282486C14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC
12FFA3120712031201B3B3B1487EB512F8A3153F7DBE1A>I<2701F801FE14FF00FF9027
07FFC00313E0913B1E07E00F03F0913B7803F03C01F80007903BE001F87000FC2603F9C0
6D487F000101805C01FBD900FF147F91C75B13FF4992C7FCA2495CB3A6486C496CECFF80
B5D8F87FD9FC3F13FEA347287DA74C>I<3901F801FE00FF903807FFC091381E07E09138
7803F000079038E001F82603F9C07F0001138001FB6D7E91C7FC13FF5BA25BB3A6486C49
7EB5D8F87F13FCA32E287DA733>I<14FF010713E090381F81F890387E007E01F8131F48
48EB0F804848EB07C04848EB03E0000F15F04848EB01F8A2003F15FCA248C812FEA44815
FFA96C15FEA36C6CEB01FCA3001F15F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F
80D8007EEB7E0090383F81FC90380FFFF0010090C7FC282A7EA82D>I<3901FC03FC00FF
90381FFF8091387C0FE09039FDE003F03A07FFC001FC6C496C7E6C90C7127F49EC3F805B
EE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE91
38C001F89039FDE007F09039FC780FC0DA3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A
7EA733>I<02FF131C0107EBC03C90381F80F090397F00387C01FC131CD803F8130E4848
EB0FFC150748481303121F485A1501485AA448C7FCAA6C7EA36C7EA2001F14036C7E1507
6C6C130F6C7E6C6C133DD8007E137990383F81F190380FFFC1903801FE0190C7FCAD4B7E
92B512F8A32D3A7DA730>I<3901F807E000FFEB1FF8EC787CECE1FE3807F9C100031381
EA01FB1401EC00FC01FF1330491300A35BB3A5487EB512FEA31F287EA724>I<90383FC0
603901FFF8E03807C03F381F000F003E1307003C1303127C0078130112F81400A27E7E7E
6D1300EA7FF8EBFFC06C13F86C13FE6C7F6C1480000114C0D8003F13E0010313F0EB001F
EC0FF800E01303A214017E1400A27E15F07E14016C14E06CEB03C0903880078039F3E01F
0038E0FFFC38C01FE01D2A7DA824>I<131CA6133CA4137CA213FCA2120112031207001F
B512C0B6FCA2D801FCC7FCB3A215E0A912009038FE01C0A2EB7F03013F138090381F8700
EB07FEEB01F81B397EB723>I<D801FC14FE00FF147FA3000714030003140100011400B3
A51501A31503120015076DEB06FF017E010E13806D4913FC90381FC078903807FFE00100
903880FE002E297DA733>I<B539E00FFFE0A32707FE000313006C48EB00FC5E00015D7F
00005DA26D13016D5CA26D6C485AA2ECC007011F91C7FCA290380FE00EA2ECF01E010713
1CA26D6C5AA2ECFC7801011370A2ECFEF001005BA2EC7FC0A36E5AA26EC8FCA3140E2B28
7EA630>I<B53BC3FFFE03FFF8A3290FFE003FE00013C06C486D48EB3F806C4817006D01
0F141E00016F131C15076D163C00004A6C1338A2017F5E4B7E151DD93F805DED3DFC1538
D91FC04A5AED78FE9238707E03D90FE0017F5BEDE03F02F0140701070387C7FC9138F1C0
1F02F9148F010315CE9138FB800F02FF14DE6D15FCED00076D5DA24A1303027E5CA2027C
1301023C5C023813003D287EA642>I<B539F01FFFE0A30003D9C00F1300C690388007F8
D97F0013E002805BD93FC05B011F49C7FC90380FE00EECF01E6D6C5A01035B6D6C5A6E5A
EB00FF6E5A6E5A81141F814A7E81147BECF1FC903801E1FEECC0FF01037F49486C7ED90F
007F011E6D7E013E130F496D7E01FC80486C80000F4A7EB539803FFFF8A32D277FA630>
I<B539E00FFFE0A32707FE000313006C48EB01FC6F5A00015D7F00005DA2017F495AA2EC
8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2ECF83C01031338A26D6C5AA2EC
FEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E141C143C1438A214780018137012
7EB45BA2495AA248485AD87E07C9FCEA780EEA3C3CEA1FF8EA07E02B3A7EA630>I<001F
B61280A2EBE0000180140049485A001E495A121C4A5A003C495A141F00385C4A5A147F5D
4AC7FCC6485AA2495A495A130F5C495A90393FC00380A2EB7F80EBFF005A5B4848130712
07491400485A48485BA248485B4848137F00FF495A90B6FCA221277EA628>I<B812F0A2
2C0280982D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmsy10 10 1
/Fm 1 1 df<007FB81280B912C0A26C17803204799641>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmmi10 10 6
/Fn 6 117 df<DCFF8013E0030F13F0037F9038FC01C0913A01FF803E03913A07FC000F
07DA0FE0EB038FDA3FC0903801DF804AC812FFEB01FED903F8157F4948ED3F00495A495A
494881017F161E49C9FC5B12014848161C5B1207485A1818121F4993C7FCA2485AA3127F
5BA312FF90CCFC93387FFFFE93B5FCA29338007FC0715A177F95C7FCA27E5F5F7F123F16
016C7E5F6C6C14036D14071207D803FCEC1EF86C6C143C26007F80EBF07890393FF007E0
010FB5EA8030010349C9FC9038003FE03B3D7DBA41>71 D<4BB4FC031F13F09238FE01FC
913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7EA07E002FCEC03F0495A4948EC01F8
495A4948EC00FC495A49C912FE49167E13FE49167F1201485AA2485AA2120F5B001F17FF
A2485AA34848ED01FEA400FFEE03FC90C9FCA2EF07F8A2EF0FF0A218E0171F18C0EF3F80
6C167F180017FE4C5A6C6C5D1603001F4B5A6D4A5A000FED1F806C6C4AC7FC6D147E0003
EC01F8D801FC495AD8007EEB0FC090263F807FC8FC903807FFF801001380383D7CBA3F>
79 D<D803E0017F14FE3D07F801FFE003FFC03D0E3C0781F00F03E03D1C3E1E00F83C01
F026383F38D9FC707F00304914E04A90387DC000007049EB7F8000604991C7FCA200E090
C700FE1301485A017E5CA200000201140301FE5F495CA203031407000160495C180F0307
5D1203494A011F13601980030F023F13E00007F000C0495C1901031F023E1380000F1803
494A150061033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E043267EA449>109
D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C00
705B00605BA200E090C712FC485A137EA20000140101FE5C5BA2150300015D5B15075E12
0349010F133016C0031F13700007ED80605B17E0EE00C0000F15014915801603EE070000
1FEC0F0E49EB07FC0007C7EA01F02C267EA432>I<14FF010313C090380F80F090383E00
380178131C153C4913FC0001130113E0A33903F000F06D13007F3801FFE014FC14FF6C14
806D13C0011F13E013039038003FF014071403001E1301127FA24814E0A348EB03C012F8
00E0EB07800070EB0F006C133E001E13F83807FFE0000190C7FC1E267CA427>115
D<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007FB51280A2B6FCD8007EC7FCA3
13FE5BA312015BA312035BA312075BA3120FEBC006A2140E001F130CEB801C141814385C
146014E0380F81C038078780D803FEC7FCEA00F819357EB31E>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr10 10 35
/Fo 35 121 df<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007
017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C49
7E267FFFE0B512C0A32A3B7FBA2E>12 D<EC0FFC91387FFF70903901F803F0903807E007
90381F800FEB3F00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFF
E0B512C0A32A3B7FBA2E>I<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2
485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F
12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>
40 D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA213
1F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C13
78A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007F
B812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213
C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<B5
12FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909798817>I<EB01C013031307
131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>49
D<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A317078316C0A3
94C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C712C0A4
1701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839>69
D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848133F48C712
1F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C
13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3F
F0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F
6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>
83 D<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770A300
601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>I<B5
D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED
03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067F
A26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE60
07A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0C
A203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202
015E4B1407A2020093C8FC4B80503B7EB855>87 D<EB1FE0EBFFFC3803E03F3907000F80
390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03
F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E1838
3FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001
FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14
F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC028
3B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC0
03A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F14
0E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277D
A525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0
007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C
131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813
C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380F
C0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14
037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80
903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213
FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<
ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E0
10000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38
060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048
C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB
0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3
120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380
C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EA03F012FFA3120F
1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC
13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1F
C0486CEB3FF0B500C0B5FCA3283A7EB92C>107 D<EA03F012FFA3120F1203B3B3AD487E
B512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903B
F1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3
495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3F
FCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB5
00C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48
487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15
F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890
387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E
9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA316
7FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E0
7E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<3807E01F00FFEB7FC090
38E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A248
7EB512F0A31C257EA421>114 D<EBFF03000313E7380F80FF381E003F487F487F00707F
12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F
141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038
C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801
F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D8
03F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77
F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFE
A33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E13
0CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214
FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48
017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EF
C00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360
A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E
0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E13
1C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114
CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E48
6C80000FEC3FF0D8FFFE90B51280A329247FA32C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmbx10 10 7
/Fp 7 117 df<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F3020380
15E1A202078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80027C7F02FC
814A7FA20101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8123F498201
3E151FA2017E82017C8101FE83B500F80107B61280A4413A7DB948>65
D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5A
EA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF
5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE003
2A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF000
13804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F0
6E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9
C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C0
48485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01
E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023
257DA42A>I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5C
A29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>114
D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15787E
7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE
140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F81400
38E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7
FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB425>
I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmsy8 8 5
/Fq 5 122 df<B812C0A32A037A9137>0 D<130C131EA50060EB01800078130739FC0C0F
C0007FEB3F80393F8C7F003807CCF83801FFE038007F80011EC7FCEB7F803801FFE03807
CCF8383F8C7F397F0C3F8000FCEB0FC039781E078000601301000090C7FCA5130C1A1D7C
9E23>3 D<137813FE1201A3120313FCA3EA07F8A313F0A2EA0FE0A313C0121F1380A3EA
3F00A3123E127E127CA35AA35A0F227EA413>48 D<91B512C01307131FD97F80C7FC01FC
C8FCEA01F0EA03C0485A48C9FC120E121E5A123812781270A212F05AA3B712C0A300E0C9
FCA37E1270A212781238123C7E120E120F6C7E6C7EEA01F0EA00FCEB7F80011FB512C013
071300222B7AA52F>50 D<1338137CA81338A7007C137CB512FEA3387C387C00001300A5
137CB3A41338AD173D7CAE20>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmr12 12 26
/Fr 26 122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A1206120E5A5A5A12600B1D78891B>44 D<121EEA7F80A2EAFFC0A4EA7F80
A2EA1E000A0A78891B>46 D<14FF010713E090381F81F890383E007C01FC133F4848EB1F
8049130F4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC48
15FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0
000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC
28447CC131>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E00
7FB6FCA3204278C131>I<14FF010713E0011F13F890387F80FC9038FC007E48487F4848
EB1F804848EB0FC0000FEC07E0485AED03F0485A16F8007F140190C713FCA25AA216FE15
00A516FFA46C5CA36C7E5D121F7F000F5C6C6C130E150C6C6C131C6C6C5BD8007C5B9038
3F01E090390FFF80FE903801FE0090C8FC150116FCA4ED03F8A216F0D80F801307486C14
E0486C130F16C0ED1F80A249EB3F0049137E001EC75A001C495A000F495A3907E01FE06C
B51280C649C7FCEB1FF028447CC131>57 D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3
ED30FFA203707FED607FA203E07FEDC03FA2020180ED801FA2DA03007F160FA202068016
07A24A6D7EA34A6D7EA34A6D7EA20270810260147FA202E08191B7FCA249820280C7121F
A249C87F170FA20106821707A2496F7EA3496F7EA3496F7EA201788313F8486C83D80FFF
03037FB500E0027FEBFFC0A342477DC649>65 D<B912F0A3000101C0C7127F6C6C48EC0F
F817031701170018781838A2181CA3180CA4180E1806160CA21800A5161CA2163C167CED
01FC91B5FCA3EC8001ED007C163C161CA2160CA793C8FCB08048487EB612F8A337447CC3
40>70 D<B600C049B512C0A3000101E0C8387FFC006C49ED3FE06D481680063EC7FC183C
183860604D5A4D5A4DC8FC171E17385F5F4C5A4C5A4CC9FC160E5E5E5E5E4B5A4B7E4B7E
150F4B7E4B7E1577EDE3FE913881C1FFEC8381DA87007F028E6D7E149C02B86D7E02F06D
7E14C04A6D7E707EA2707E707EA2707F717EA2717E717EA2717E717EA2717E717EA2717F
8585496C82486D4A13FCB600C0011FEBFFE0A343447CC34C>75 D<B56C933807FFFC6E5E
A20001F1FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3D961FC16C3A3D960FEED
0183A2027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C
14C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5A
A36F6C5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB500F0011C0107B512FCA3
4E447BC359>77 D<B712E016FF17C000019039C0003FF86C6C48EB03FCEE00FF717E717E
717E717E717EA284170384A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE0
91B6C9FC16FC913980007F80EE0FE0707EEE03FC707E160083717EA2717EA784A71A6084
171FA21AE0716C13C02601FFE002071301B600C01680943801FC03943900FE0700CBEA3F
FEF007F843467CC348>82 D<49B41303010FEBE007013F13F89039FE00FE0FD801F8131F
D807E0EB079F49EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282A37E82
A27EA26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C15C001
3F14F0010F80010180D9001F7F14019138001FFF03031380816F13C0167F163F161F17E0
00C0150FA31607A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05CD8F9F0
495AD8F07C495A90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC536>I<
EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F6D
6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A
485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A
1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039FDE0
007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB
17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B
9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436>I<EB01FE9038
07FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F48
4814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670
000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F89038
03FFE0010090C7FC242E7DAC2B>101 D<EA01FC12FFA3120712031201B3EC01FE913807
FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8
486CECFF80B5D8F83F13FEA32F457DC436>104 D<EA01E0EA07F8A2487EA46C5AA2EA01
E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>I<EA01FC12FF
A3120712031201B3A292381FFFE0A36F1300ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A
5A4AC8FC5CEC3F804A7E14FF9038FDCFE09038FF8FF01407496C7E01FC7F14016E7E8181
6F7E82151F6F7E821507826F7E8282486C491380B5D8F81F13F8A32D457DC433>107
D<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>I<3901FC01FE00
FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FDC07F5C01FF147F
91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>110
D<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D
7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600
A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC9038
1FC0FE903807FFF89038007F802A2E7DAC31>I<3903F803F000FFEB1FFCEC3C3EEC707F
0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA320
2C7DAB26>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E130148130000
7C1478127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14
C06C14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C
6C147C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26
>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4
150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC0903800
7F001E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA2
12006D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F
8013002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E12
00160C017F5CA280013F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FC
A26E5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC
2E2C7EAA33>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C
6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF8030103
91C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E
5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA
3C1EEA0FFCEA03F02E3F7EAA33>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr17 17.28 22
/Fs 22 118 df<EE3FF0923803FFFE031F6D7E92397FC01FC0913A01FE0003E0DA07F8EB
00F04A4814784A48804A48EB01FC4A48EB07FE4AC7FC4948140F13035C13075C715A010F
6F5A4AEC00E095C8FCB3EF03FEB9FCA426000FF0C7120F1703A21701B3B3AD496C4A7E49
6C4A7F003FB5D8FC07B61280A441657EE448>12 D<B712F0A7240780A12B>45
D<170FA34D7EA24D7EA34D7EA34D7EA34C7F17DFA29338039FFC178FA29338070FFE1707
040F7FEE0E03A2041E80EE1C01A2043C80EE3800A24C80187FA24C80183FA24B4880181F
0303814C130FA203078193C71207A24B81030E80A24B8284A24B8284A24B82197F03F082
4B153FA20201834B151FA202038392B8FCA24A83A292C91207020E8385A24A8485023C84
023882A20278840270177FA202F0844A173FA24948841A1FA24948841A0FA249CB7F1A07
4985865B496C85497E48486C4D7F000F01F8051F13F0B60407B612F0A45C657DE463>65
D<DD7FF81560040FB56C14E0047F14E00303B600FC1301030F9038E003FEDB3FFEC7383F
8003DBFFF0EC07C04A01C0913803F007020790C9EAF80FDA0FFC167C4A48EE1E1FDA7FE0
160F4A48EE07BF4949EE03FF4990CAFC4948834948834A187F495A013F193F4948181F5C
01FF190F485BA24890CC1207A248481903A2485A1B01121FA25B123F1B005BA2127F1C00
A4485AB06C7EA5123F1CE07FA2121F7FA2000F1A011CC06C7EA26C7E1B036C6D19801B07
6C7F017F1A006E606D6C181E131F6D6C606E18386D6C18786D6C606D6D4C5A6D6D4C5A6E
6C1607DA1FF84C5A6E6C4CC7FC6EB4167C020101C04A5A6E01F0EC07F0DB3FFEEC1FC092
280FFFE001FFC8FC030390B512FCDB007F14F0040F14809326007FF8C9FC53667AE360>
67 D<B500FC071FB51280A36E61C6F58000013F51C7FCD91DFFF177FCA2011C6D18E7A3
6E6CEF01C7A36E6CEF0387A36E6CEF0707A26E6C170EA36E6C171CA36E6C1738A36E6C17
70A26E6D16E0A36F6CED01C0A36F6CED0380A36F6CED0700A26F6C150EA36F6C5DA36F6C
5DA36F6C5DA26F6D5CA3706C495AA3706C495AA3706C49C7FCA2706C130EA3706C5BA370
6C5BA3706C5BA3706D5AA294387FC1C0A394383FE380A3DD1FF7C8FCA3EF0FFEA2013E6F
5AA2137F715A2601FFC04F7E000701F896383FFF80B66C6D48023FB61280A3715A696278
E17A>77 D<DA07FF1403023F01F05B49B512FC010702FF5B90260FFC0013C0D93FE09038
0FF01FD97F80EB03F801FEC86C5A4848157E4848ED1F7F48486F5A4848815B001F824981
003F8290CAFC4883A2007E83A212FE84A384A27EA36D82A26C7EA26D93C7FC6C7E7F7F6C
7E6D7E6C13E06C13FCECFFC06C14F86CECFF806C15F86DECFF80011F15E06D15F8010315
FE01006F7E021F81020181DA003F80030380DB003F7F04037FEE007FEF1FFF7113801703
7113C083A2F07FE0183FA2181F00E018F0180FA41807A27EA47E19E0180F7E19C07E6C17
1F19806D163F6D17006D5E6D16FE486C5E6D4B5AD8FC7F1503D91F80EC0FF026F80FE04A
5AD907FCEC7F8029F001FFE003FFC7FC6D6CB512FC48011F14F0020314C0489026001FFE
C8FC3C667AE349>83 D<B600FC0207B600E00203B512FCA4000191C9000F01F8C9003F13
C026007FFC040301E0040F13006D487049EE07FC7A5A73725A131F696E717E010F67A26E
721603010767A26E4D7E6D54C7FCA2876D6DDB01CF170EA2876FDB0387171E6D1E1CA26F
92260703FF163C027F1D38A26F030F80023FDC0E015FA26F031E80021FDC1C005FA2886E
6C4B017F4B5AA36F4B6D6C1403020765A26F03F06E14076E4C011F93C8FCA2700101816E
4C010F150EA2886E6D494801075DA37049C76C6C143C037F1B38A27049701378033F020E
6E1570A270011E82031F021C6E5DA2896F6C49037F495AA21DF07049033F1303030763A2
704992381FF8076F98C9FCA2058117FC6F4A030F130EA205C317FE6F4A03075BA21DFFDC
7FE7C96C5BA305FE7013F8043F61A37048705BA37048715AA37048715AA34D171F040396
CAFCA24D830401180E86647FE189>87 D<EC3FF0903803FFFE010F6D7E90393FC03FE090
397E0007F801F86D7ED801E06D7E48486D7E48486E7E48C86C7E7F01F06E7E487E6D6E7E
A3707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC91387FF807903801FF80903807FC00
EB1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA2484817E0A312FF5BA2160FA316
1F6D141B007F153B16736D913971FC01C06C6C14E1001FEC01C1D80FFC903A0780FE0380
6C6C903A0F00FF07002701FF807E6DB4FC27007FFFF86D5A011F01E0EB1FF8010190C7EA
07E03B417ABF42>97 D<4AB47E020F13F8023F13FE9139FF007F80D903FCEB07E0D907F0
EB01F0D91FE0EB007849488049488049C87E48485D4915FF00034B138048485CA2485AA2
485AA2003F6F130049EC007C94C7FC127FA35B12FFAD127F7FA4123F7FA2001FEE01C07F
000F16036D168012076C6C15076D160000015E6C6C151E6D6C5C6D6C5C6D6C5CD90FF849
5AD903FCEB07C0903A00FF803F8091263FFFFEC7FC020F13F80201138032417CBF3A>99
D<EC03FE91381FFFE091B512F8903901FE03FE903A07F0007F8049486D7ED93FC06D7E49
C76C7E496E7E49140348488148481401000782491400000F8283485A1880123F49153FA2
007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA3123FA27F121FEF01C06C7E17036C
6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D9
03FC495A902700FF803FC7FC91383FFFFC020F13F00201138032417CBF3A>101
D<ED0FF0ED7FFC4AB5FC913907F81F8091390FE00FC091381FC03F91393F807FE0EC7F00
5C495A5C0103EC3FC0A24948EB0F0093C7FCA2495AB3A5B712F0A426000FF0C8FCB3B3B0
497EEB3FFE003FB6FCA42B657EE428>I<F03F80DA03FC903801FFE091273FFFC00713F0
91B539F01FC1F8903B03FC03FC3E03903A07F000FE784948EB7FE04948EB3FC04948011F
EB01F049C76C6CC7FC01FE6E7EA248486E7EA2000382A2491401000782AA00035E6D1403
A200015EA26C6C4A5AA2017F4A5A6D6C495A6D6C495A496C49C8FCD937F013FE903973FC
03FC0160B512F0D9E03F13C0DA03FCC9FC4848CBFCA57FA27FA27F6C7E13FF91B512FE6D
ECFFF06D15FE6D6F7E6D16E084013F16FC01FEC700017FD803F8EC001FD807E0ED03FF48
48030013804848167F003FEF3FC090CA121F127EF00FE012FE481707A66C170F007E18C0
A2007F171F6C6CEE3F806C6CEE7F00000F177ED807F04B5A6C6C4B5A6C6C4B5AD8007FED
1FC0D93FE0ECFF80D90FFED90FFEC7FC0101B612F0D9003F1480020101F0C8FC3D5E7DBF
42>I<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FE0923803FFFC030F13FFDB3F
0013C00378EB1FE04B6D7EDAC1C06D7EDAC3808002C7C7120302CE81170114DC14D802F8
6E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A442647DE349>I<133C13FF
487F487FA66C5B6C90C7FC133C90C8FCB3A2EB03C0EA07FF127FA41201EA007FA2133FB3
B3AC497E497EB612E0A41B5F7DDE23>I<EB03C0EA07FFB5FCA41201EA007FA2133FB3B3
B3B3AD497E497EB612F0A41C647DE323>108 D<D903C0D9FFC0EC07FED807FF010301F8
91381FFFC0B5010F01FE027F13F0923D3F00FF8001F807FC0378903B3FC003C001FEDAC1
E090261FE00FC77E0001D9C3C090260FF01E6E7ED8007F49902607F81C6E7E02C7C75CD9
3FCE6E6C486E7E02CC166002DC16E002D85E02F8DA01FF6F7E4A5EA24A93C8FCA44A5DB3
B3496C4A6C4B7E496C4A6D4A7EB6D8F007B6D8803FB512FCA4663F7CBE6F>I<D903C0EB
7FE0D807FF903803FFFCB5010F13FFDB3F0013C00378EB1FE04B6D7E0001D9C1C06D7E27
007FC3808002C7C71203D93FCE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F49
6C4A7FB6D8F003B612C0A4423F7DBE49>I<EDFF80020F13F8023F13FE9139FF007F80D9
03FCEB1FE0D907F0EB07F0D90FC0EB01F8D93F80EB00FE49C8127F017E81496F7E48486F
7E00038349150700078348486F7EA2001F83491501A2003F83A348486F7EA400FF1880AC
007F1800A26D5DA2003F5FA36C6C4B5AA36C6C4B5A00075FA26C6C4B5A6C6C4B5AA26C6C
4B5A017F4BC7FC6D6C14FE6D6C495AD90FF0EB07F8D903FCEB1FE0D900FFEB7F806EB5C8
FC020F13F8020113C039417CBF42>I<9039078003F8D807FFEB0FFFB5013F13C092387C
0FE0913881F01F9238E03FF00001EB838039007F8700148FEB3F8E029CEB1FE0EE0FC002
98EB030002B890C7FCA214B014F0A25CA55CB3B0497EEBFFF8B612FCA42C3F7CBE33>
114 D<9139FFE00180010FEBFC03017FEBFF073A01FF001FCFD803F8EB03EFD807E0EB01
FF48487F4848147F48C8123F003E151F007E150F127CA200FC1507A316037EA27E7F6C7E
6D91C7FC13F8EA3FFE381FFFF06CEBFF806C14F86C14FF6C15C06C6C14F0011F80010714
FED9007F7F02031480DA003F13C01503030013E0167F00E0ED1FF0160F17F86C15071603
A36C1501A37EA26C16F016037E17E06D14076DEC0FC06D1580D8FDF0141FD8F8F8EC7F00
013E14FC3AF01FC00FF80107B512E0D8E001148027C0003FF8C7FC2D417DBF34>I<1438
A71478A414F8A31301A31303A21307130F131FA2137F13FF1203000F90B6FCB8FCA32600
07F8C8FCB3AE17E0AE6D6CEB01C0A316036D6C148016076D6C14006E6C5A91383FC01E91
381FF07C6EB45A020313E09138007F802B597FD733>I<D903C0150FD807FFED1FFFB502
03B5FCA40001ED0007D8007F1501A2013F81B3B25FA35FA35F011F15066E140E5F130F6E
4A7F01075D6D6C494813E0D901FE4948EBFFC0903A00FFC01F8091393FFFFE00020F13F8
020001C0EC800042407DBE49>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 293 763 a Fs(A)44 b(Correctness)e(Certi\014cate)i(for)e(the)i
(Sto)t(er-W)-11 b(agner)43 b(Min-Cut)1618 946 y(Algorithm)994
1198 y Fr(Sriniv)-5 b(asa)31 b(R.)i(Arik)-5 b(ati)1841
1162 y Fq(\003)2183 1198 y Fr(Kurt)33 b(Mehlhorn)2831
1162 y Fq(y)1528 1402 y Fr(F)-8 b(ebruary)33 b(10,)f(1999)1730
1805 y Fp(Abstract)427 1940 y Fo(The)20 b(Sto)r(er-W)-7
b(agner)18 b(algorithm)h(computes)h(a)g(minim)n(um)g(cut)h(in)f(a)f(w)n
(eigh)n(ted)h(undirected)g(graph.)302 2040 y(The)29 b(algorithm)f(w)n
(orks)f(in)j Fn(n)19 b Fm(\000)g Fo(1)28 b(phases,)h(where)g
Fn(n)f Fo(is)h(the)h(n)n(um)n(b)r(er)e(of)h(no)r(des)g(of)g
Fn(G)p Fo(.)42 b(Eac)n(h)27 b(phase)302 2139 y(tak)n(es)32
b(time)i Fn(O)r Fo(\()p Fn(m)22 b Fo(+)g Fn(n)14 b Fo(log)g
Fn(n)p Fo(\),)34 b(where)f Fn(m)f Fo(is)h(the)g(n)n(um)n(b)r(er)g(of)g
(edges)f(of)h Fn(G)p Fo(,)i(and)d(computes)h(a)g(pair)302
2239 y(of)e(v)n(ertices)f Fn(s)h Fo(and)g Fn(t)g Fo(and)f(a)h(minim)n
(um)h(cut)f(separating)e Fn(s)i Fo(and)g Fn(t)p Fo(.)47
b(W)-7 b(e)31 b(sho)n(w)f(ho)n(w)g(to)h(extend)g(the)302
2338 y(algorithm)e(suc)n(h)g(that)h(eac)n(h)f(phase)g(also)g(computes)g
(a)h(maxim)n(um)f(\015o)n(w)g(from)h Fn(s)f Fo(to)h Fn(t)p
Fo(.)43 b(The)30 b(\015o)n(w)f(is)302 2438 y(computed)f(in)g
Fn(O)r Fo(\()p Fn(m)p Fo(\))h(additional)e(time)h(and)f(certi\014es)g
(the)h(cut)g(computed)g(in)g(the)g(phase.)216 2618 y
Fl(W)-8 b(e)33 b(giv)m(e)f(a)g(correctness)g(certi\014cate)h(for)e(the)
h(min-cut)f(algorithm)f(of)i(Sto)s(er)g(and)f(W)-8 b(agner)32
b([SW97)q(].)75 2731 y(This)20 b(algorithm)h(re\014nes)g(the)h
(algorithm)f(of)h(Nagamo)s(c)m(hi)h(and)e(Ibaraki)g([NI92b)q(,)h(NI92a)
q(];)j(it)d(has)f(the)i(same)75 2843 y(time)28 b(complexit)m(y)-8
b(,)29 b(but)e(is)g(simpler.)38 b(The)27 b(algorithm)h(is)f
(deterministic.)38 b(There)27 b(are)i(faster)f(randomized)75
2956 y(algorithms)h([Kar94)q(,)i(KS96].)41 b(No)31 b(certi\014cates)g
(are)g(kno)m(wn)f(for)g(the)g(randomized)g(algorithms.)216
3114 y(Let)j Fk(G)f Fl(b)s(e)f(an)h(undirected)f(graph)h(with)f
Fk(n)g Fl(v)m(ertices)i(and)f Fk(m)g Fl(edges.)47 b(The)32
b(algorithm)f(of)h(Sto)s(er)h(and)75 3227 y(W)-8 b(agner)36
b(w)m(orks)f(in)e Fk(n)23 b Fj(\000)g Fl(1)35 b(phases.)54
b(In)34 b(eac)m(h)i(phase)e(it)g(iden)m(ti\014es)g(t)m(w)m(o)i(v)m
(ertices)f(and)g(a)g(minim)m(um)d(cut)75 3339 y(separating)42
b(them)g(and)g(then)g(collapses)f(the)i(t)m(w)m(o)g(v)m(ertices)g(in)m
(to)f(one.)77 b(The)42 b(global)f(min-cut)g(is)h(the)75
3452 y(minim)m(um)31 b(cut)i(found)g(in)f(an)m(y)i(phase.)50
b(Eac)m(h)34 b(phase)f(runs)f(in)g(time)i Fk(O)s Fl(\()p
Fk(m)22 b Fl(+)g Fk(n)15 b Fl(log)h Fk(n)p Fl(\).)50
b(W)-8 b(e)35 b(extend)f(the)75 3565 y(algorithm)f(suc)m(h)h(that)h(it)
f(also)h(\014nds)d(a)j(\015o)m(w)f(equal)g(to)h(the)g(min-cut)e(in)g
(eac)m(h)j(phase.)52 b(The)34 b(additional)75 3678 y(time)c(required)f
(to)i(\014nd)e(the)h(\015o)m(w)h(is)e Fk(O)s Fl(\()p
Fk(m)p Fl(\))i(in)e(eac)m(h)i(phase.)216 3835 y(W)-8
b(e)34 b(concen)m(trate)h(on)d(the)h(\014rst)f(phase.)46
b(F)-8 b(or)34 b(an)e(edge)h Fk(e)d Fl(=)e Fk(uv)36 b
Fl(w)m(e)d(use)f Fk(w)r Fl(\()p Fk(e)p Fl(\))i(or)f Fk(w)r
Fl(\()p Fk(u;)15 b(v)s Fl(\))34 b(to)f(denote)75 3948
y(its)f(w)m(eigh)m(t)i(\(whic)m(h)e(is)g(non-negativ)m(e\))i(and)f(for)
f(a)i(subset)e Fk(A)e Fj(\022)f Fk(V)53 b Fl(and)33 b(a)g(v)m(ertex)h
Fk(z)j Fl(w)m(e)d(use)f Fk(w)r Fl(\()p Fk(A;)15 b(z)t
Fl(\))31 b(=)75 3997 y Fi(P)163 4084 y Fh(x)p Fq(2)p
Fh(A)322 4061 y Fk(w)r Fl(\()p Fk(x;)15 b(z)t Fl(\))46
b(to)e(denote)h(the)f(w)m(eigh)m(ted)h(adjacency)g(of)f
Fk(z)49 b Fl(to)c Fk(A)p Fl(.)82 b(The)43 b(Sto)s(er-W)-8
b(agner)46 b(algorithm)75 4174 y(n)m(um)m(b)s(ers)38
b(the)i(v)m(ertices)g(of)g Fk(G)f Fl(b)m(y)g(a)h(so-called)f
Fg(maximum)k(adjac)-5 b(ency)42 b(se)-5 b(ar)g(ch)p Fl(.)70
b(In)39 b(the)h(\014rst)e(step)i(an)75 4287 y(arbitrary)30
b(v)m(ertex)i Fk(a)27 b Fj(2)f Fk(V)52 b Fl(is)30 b(selected)i(and)e
(lab)s(eled)g(1)i(and)e Fk(A)i Fl(is)e(initialized)e(to)k
Fj(f)p Fk(a)p Fj(g)p Fl(.)44 b(In)31 b(the)g Fk(i)p Fl(-th)h(step,)75
4400 y(2)37 b Fj(\024)f Fk(i)h Fj(\024)f Fk(n)p Fl(,)i(an)f(unlab)s
(eled)e(v)m(ertex)j Fk(x)f Fl(with)f(maximal)f(adjacency)j(to)g
Fk(A)f Fl(is)f(selected,)k(lab)s(eled)35 b Fk(i)p Fl(,)40
b(and)75 4513 y(added)30 b(to)h Fk(A)p Fl(.)41 b(Let)31
b Fk(s)e Fl(and)h Fk(t)g Fl(b)s(e)g(the)h(t)m(w)m(o)g(v)m(ertices)g
(lab)s(eled)e(last.)75 4709 y Ff(Lemma)k(1)45 b Fg([SW97)q(])33
b Fl(\()p Fk(V)40 b Fj(\000)20 b(f)p Fk(t)p Fj(g)p Fk(;)15
b Fj(f)p Fk(t)p Fj(g)p Fl(\))35 b Fg(is)e(a)g(minimum)g
Fk(s)p Fg(-)p Fk(t)p Fg(-cut.)216 4905 y Fl(Let)38 b
Fk(C)44 b Fl(=)37 b Fk(w)r Fl(\()p Fk(V)47 b Fj(\000)24
b(f)p Fk(t)p Fj(g)p Fk(;)15 b Fj(f)p Fk(t)p Fj(g)p Fl(\).)65
b(W)-8 b(e)39 b(will)c(construct)j(a)g(\015o)m(w)g(of)g(v)-5
b(alue)37 b Fk(C)44 b Fl(from)38 b Fk(s)f Fl(to)h Fk(t)p
Fl(.)63 b(F)-8 b(rom)38 b(no)m(w)75 5018 y(on)33 b(w)m(e)h(iden)m(tify)
d(no)s(des)h(with)g(their)g(lab)s(el)g(\(in)g(particular,)g
Fk(t)e Fl(=)g Fk(n)i Fl(and)h Fk(s)c Fl(=)h Fk(n)21 b
Fj(\000)h Fl(1\))34 b(and)e(w)m(e)i(use)f Fk(A)3608 5032
y Fh(i)3669 5018 y Fl(to)75 5131 y(denote)f(the)f(no)s(des)g(1)h(to)g
Fk(i)p Fl(.)43 b(Our)31 b(main)f(tec)m(hnical)h(to)s(ol)g(is)g(the)g
(concept)h(of)g(an)f Fk(r)s Fl(-reduction)f(where)h Fk(r)j
Fl(is)75 5244 y(a)h(non-negativ)m(e)h(real.)53 b(An)34
b Fk(r)s Fl(-reduction)f(c)m(hanges)j(the)f(w)m(eigh)m(t)g(function)e
Fk(w)k Fl(to)f(a)f(w)m(eigh)m(t)g(function)e Fk(w)3726
5211 y Fq(0)75 5357 y Fl(suc)m(h)d(that)p 75 5413 1470
4 v 177 5467 a Fe(\003)213 5499 y Fd(Cadence)c(Design)h(Systems,)d(San)
i(Jose,)h(CA,)f(USA,)f Fc(arikati@cadence.com)180 5561
y Fe(y)213 5592 y Fd(Max-Planc)n(k-Institute)g(for)h(Informatics,)h
(Saarbr)r(\177)-41 b(uc)n(k)n(en,)26 b(German)n(y)-6
b(,)24 b Fc(http://www.mpi-sb.mpg.de/~meh)q(lhor)q(n)1890
5841 y Fl(1)p eop
%%Page: 2 2
2 1 bop 637 882 a @beginspecial 0 @llx 0 @lly 310 @urx
70 @ury 3100 @rwi @setspecial
%%BeginDocument: example.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: example.fig
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Mon Feb  8 17:00:05 1999
%%For: mehlhorn@mpii-km (Kurt Mehlhorn)
%%Orientation: Portrait
%%BoundingBox: 0 0 310 70
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-9.0 82.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 2360 m -1000 -1000 l 6311 -1000 l 6311 2360 l cp clip
 0.06000 0.06000 sc
% Arc
7.500 slw
gs n 637.5 1200.0 451.6 -138.4 -41.6 arc
gs col-1 s gr
 gr

% Arc
gs n 1275.0 675.0 375.0 143.1 36.9 arcn
gs col-1 s gr
 gr

% Arc
gs n 937.5 1023.2 649.3 -169.1 -10.9 arc
gs col-1 s gr
 gr

% Arc
gs n 1537.5 775.0 576.2 167.5 12.5 arcn
gs col-1 s gr
 gr

% Arc
gs n 3637.5 1200.0 451.6 -138.4 -41.6 arc
gs col-1 s gr
 gr

% Arc
gs n 4275.0 675.0 375.0 143.1 36.9 arcn
gs col-1 s gr
 gr

% Arc
gs n 3937.5 1023.2 649.3 -169.1 -10.9 arc
gs col-1 s gr
 gr

% Arc
gs n 4537.5 775.0 576.2 167.5 12.5 arcn
gs col-1 s gr
 gr

% Ellipse
n 337 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 19.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 2137 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 139.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 937 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 59.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 1537 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 99.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3337 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 219.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4537 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 299.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 5137 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 339.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3937 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 259.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
gs  clippath
2853 870 m 2973 900 l 2853 930 l 3015 930 l 3015 870 l cp
clip
n 2400 900 m 3000 900 l gs 0.00 setgray ef gr gs col-1 s gr gr

% arrowhead
n 2853 870 m 2973 900 l 2853 930 l  col-1 s
/Times-Roman ff 120.00 scf sf
1650 900 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3150 975 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 120.00 scf sf
150 975 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 120.00 scf sf
1050 900 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 120.00 scf sf
2250 900 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Roman ff 120.00 scf sf
4050 900 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 120.00 scf sf
4650 900 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Roman ff 120.00 scf sf
5250 900 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Italic ff 120.00 scf sf
975 300 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Italic ff 120.00 scf sf
1275 975 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Italic ff 120.00 scf sf
1500 1275 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Italic ff 120.00 scf sf
3900 300 m
gs 1 -1 sc (1.5) col-1 sh gr
/Times-Italic ff 120.00 scf sf
4200 975 m
gs 1 -1 sc (0.5) col-1 sh gr
/Times-Italic ff 120.00 scf sf
4575 1275 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 120.00 scf sf
600 675 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Italic ff 120.00 scf sf
3600 675 m
gs 1 -1 sc (2) col-1 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 1439 1178 a Fl(Figure)30 b(1:)41 b(A)31
b(2-reduction)186 1453 y(1.)46 b Fk(w)369 1420 y Fq(0)393
1453 y Fl(\()p Fk(e)p Fl(\))26 b Fj(\024)f Fk(w)r Fl(\()p
Fk(e)p Fl(\))32 b(for)e(all)g Fk(e)186 1640 y Fl(2.)46
b Fk(w)369 1607 y Fq(0)393 1640 y Fl(\()p Fk(A)496 1654
y Fh(i)p Fq(\000)p Fb(1)615 1640 y Fk(;)15 b(i)p Fl(\))26
b(=)f(min)o(\()p Fk(r)m(;)15 b(w)r Fl(\()p Fk(A)1278
1654 y Fh(i)p Fq(\000)p Fb(1)1398 1640 y Fk(;)g(i)p Fl(\)\))32
b(for)e(all)g Fk(i)p Fl(.)75 1828 y(Figure)20 b(1)i(sho)m(ws)e(an)h
(example.)37 b(W)-8 b(e)22 b(w)m(an)m(t)g(to)f(stress)g(that)h(an)e
Fk(r)s Fl(-reduction)g(do)s(es)h(not)g(uniquely)d(determine)75
1941 y(the)27 b(new)f(w)m(eigh)m(t)g(function.)39 b(The)26
b(only)f(requiremen)m(ts)h(are)g(that)h(w)m(eigh)m(ts)g(are)g(only)f
(decreased)h(and)e(that)75 2054 y(the)31 b(adjacency)g(of)f(an)m(y)h(v)
m(ertex)h(is)d(reduced)h(to)h(the)f(minim)m(um)e(of)i
Fk(r)j Fl(and)d(its)g(old)f(adjacency)-8 b(.)75 2266
y Ff(Lemma)33 b(2)45 b Fg(L)-5 b(et)32 b Fk(w)766 2233
y Fq(0)821 2266 y Fg(b)-5 b(e)32 b(obtaine)-5 b(d)33
b(by)e(an)h Fk(r)s Fg(-r)-5 b(e)g(duction)32 b(fr)-5
b(om)33 b Fk(w)r Fg(.)42 b(Then)32 b(a)g(maximum)g(adjac)-5
b(ency)33 b(se)-5 b(ar)g(ch)75 2379 y(on)33 b Fl(\()p
Fk(G;)15 b(w)419 2346 y Fq(0)443 2379 y Fl(\))33 b Fg(c)-5
b(an)33 b(r)-5 b(epr)g(o)g(duc)g(e)36 b(the)d(no)-5 b(de)33
b(lab)-5 b(eling)34 b(induc)-5 b(e)g(d)33 b(by)g Fk(w)r
Fg(.)75 2611 y Ff(Pro)s(of:)83 b Fl(W)-8 b(e)24 b(use)f(induction)e(on)
h Fk(i)p Fl(.)39 b(Clearly)-8 b(,)24 b(no)s(de)e(1)h(can)g(still)e(b)s
(e)i(lab)s(eled)e(1.)39 b(So,)24 b(assume)f(that)g(no)s(des)g(1)75
2724 y(to)h Fk(i)7 b Fj(\000)g Fl(1)24 b(ha)m(v)m(e)g(b)s(een)f(lab)s
(eled)f(iden)m(tically)g(and)h(consider)f(no)s(des)h
Fk(i)h Fl(and)f Fk(j)29 b Fl(with)22 b Fk(i)k(<)f(j)5
b Fl(.)39 b(Then)23 b Fk(w)r Fl(\()p Fk(A)3428 2738 y
Fh(i)p Fq(\000)p Fb(1)3547 2724 y Fk(;)15 b(i)p Fl(\))26
b Fj(\025)75 2837 y Fk(w)r Fl(\()p Fk(A)245 2851 y Fh(i)p
Fq(\000)p Fb(1)364 2837 y Fk(;)15 b(j)5 b Fl(\))47 b(since)d
Fk(i)i Fl(w)m(as)f(lab)s(eled)f(b)s(efore)h Fk(j)50 b
Fl(with)44 b(resp)s(ect)h(to)h(w)m(eigh)m(t)g(function)e
Fk(w)r Fl(,)50 b Fk(w)r Fl(\()p Fk(A)3392 2851 y Fh(i)p
Fq(\000)p Fb(1)3511 2837 y Fk(;)15 b(j)5 b Fl(\))51 b
Fj(\025)75 2950 y Fk(w)142 2917 y Fq(0)166 2950 y Fl(\()p
Fk(A)269 2964 y Fh(i)p Fq(\000)p Fb(1)388 2950 y Fk(;)15
b(j)5 b Fl(\))34 b(since)e(w)m(eigh)m(ts)h(are)g(only)e(decreased,)j
Fk(w)1950 2917 y Fq(0)1974 2950 y Fl(\()p Fk(A)2077 2964
y Fh(i)p Fq(\000)p Fb(1)2196 2950 y Fk(;)15 b(j)5 b Fl(\))30
b Fj(\024)f Fk(r)35 b Fl(since)d Fk(w)2811 2917 y Fq(0)2867
2950 y Fl(is)g(obtained)g(from)g Fk(w)j Fl(b)m(y)75 3063
y(an)h Fk(r)s Fl(-reduction,)h(and)f Fk(w)968 3030 y
Fq(0)992 3063 y Fl(\()p Fk(A)1095 3077 y Fh(i)p Fq(\000)p
Fb(1)1214 3063 y Fk(;)15 b(i)p Fl(\))36 b(=)f(min)o(\()p
Fk(r)m(;)15 b(w)r Fl(\()p Fk(A)1897 3077 y Fh(i)p Fq(\000)p
Fb(1)2018 3063 y Fk(;)g(i)p Fl(\)\).)60 b(Th)m(us,)37
b Fk(w)2574 3030 y Fq(0)2598 3063 y Fl(\()p Fk(A)2701
3077 y Fh(i)p Fq(\000)p Fb(1)2820 3063 y Fk(;)15 b(i)p
Fl(\))36 b Fj(\025)f Fk(w)3135 3030 y Fq(0)3159 3063
y Fl(\()p Fk(A)3262 3077 y Fh(i)p Fq(\000)p Fb(1)3381
3063 y Fk(;)15 b(j)5 b Fl(\))38 b(and)e Fk(i)75 3176
y Fl(can)31 b(still)d(b)s(e)i(lab)s(eled)e(b)s(efore)i
Fk(j)5 b Fl(.)p 3723 3184 28 55 v 216 3452 a(W)-8 b(e)27
b(de\014ne)e(t)m(w)m(o)h(paths,)h(one)e(starting)h(from)f
Fk(t)g Fl(and)g(one)g(starting)h(from)f Fk(s)p Fl(.)38
b(The)25 b(path)h Fk(p)3246 3466 y Fh(t)3300 3452 y Fl(=)f
Fk(v)3440 3466 y Fb(0)3480 3452 y Fk(;)15 b(v)3564 3466
y Fb(1)3604 3452 y Fk(;)g(:)g(:)g(:)75 3565 y Fl(starting)37
b(from)g Fk(t)h Fl(is)e(de\014ned)h(as)h(follo)m(ws.)61
b(W)-8 b(e)39 b(set)f Fk(v)1964 3579 y Fb(0)2041 3565
y Fl(=)f Fk(t)g Fl(and)g(for)g Fk(l)j Fj(\025)d Fl(1)h(de\014ne)e
Fk(v)3120 3580 y Fh(l)3184 3565 y Fl(as)i(the)g(highest)75
3677 y(n)m(um)m(b)s(ered)30 b(no)s(de)h(less)g(than)g
Fk(v)1145 3692 y Fh(l)q Fq(\000)p Fb(1)1293 3677 y Fl(suc)m(h)h(that)g
Fk(w)r Fl(\()p Fk(v)1844 3692 y Fh(l)1871 3677 y Fk(;)15
b(v)1955 3692 y Fh(l)q Fq(\000)p Fb(1)2071 3677 y Fl(\))28
b Fk(>)f Fl(0.)45 b(The)31 b(path)h Fk(p)2795 3691 y
Fh(s)2863 3677 y Fl(is)e(de\014ned)h(analogously)-8 b(.)75
3790 y(In)28 b(the)g(graphs)g(of)g(Figure)g(1)h(the)f(path)g(starting)g
(from)g Fk(t)g Fl(is)g(4,)h(2,)g(1)g(and)f(the)g(path)g(starting)g
(from)g Fk(s)g Fl(is)f(3,)75 3903 y(2,)k(1.)41 b(W)-8
b(e)32 b(de\014ne)d(the)i Fk(s)p Fl(-)p Fk(t)p Fl(-join)e(as)i(the)f
(highest)g(n)m(um)m(b)s(ered)f(v)m(ertex)j(that)e(b)s(elongs)g(to)h
Fk(p)3138 3917 y Fh(t)3198 3903 y Fl(and)e Fk(p)3420
3917 y Fh(s)3457 3903 y Fl(.)75 4116 y Ff(Lemma)k(3)182
4303 y Fg(1.)46 b(F)-7 b(or)34 b(al)5 b(l)33 b Fk(i)p
Fg(:)42 b(if)32 b(no)h(no)-5 b(de)34 b Fk(j)5 b Fg(,)33
b Fk(j)e Fj(\025)25 b Fk(i)p Fg(,)33 b(lies)f(on)i Fk(p)1833
4317 y Fh(s)1902 4303 y Fg(and)f Fk(p)2124 4317 y Fh(t)2186
4303 y Fg(then)g Fk(w)r Fl(\()p Fk(A)2558 4317 y Fh(i)p
Fq(\000)p Fb(1)2678 4303 y Fk(;)15 b(i)p Fl(\))26 b Fj(\025)f
Fk(C)32 b Fl(:=)25 b Fk(w)r Fl(\()p Fk(A)3294 4317 y
Fh(n)p Fq(\000)p Fb(1)3432 4303 y Fk(;)15 b(n)p Fl(\))p
Fg(.)182 4491 y(2.)46 b(If)33 b Fk(C)e(>)25 b Fl(0)p
Fg(,)33 b(the)g Fk(s)p Fg(-)p Fk(t)p Fg(-join)f(exists)h(and)g
Fk(w)r Fl(\()p Fk(A)1769 4505 y Fh(i)p Fq(\000)p Fb(1)1889
4491 y Fk(;)15 b(i)p Fl(\))26 b Fj(\025)f Fk(C)39 b Fg(for)33
b(any)g Fk(i)g Fg(lar)-5 b(ger)34 b(than)g(the)f Fk(s)p
Fg(-)p Fk(t)p Fg(-join.)75 4723 y Ff(Pro)s(of:)186 4911
y Fl(1.)46 b(W)-8 b(e)34 b(use)d(induction)f(on)i Fk(i)p
Fl(.)46 b(The)31 b(claim)g(is)h(clearly)f(true)h(for)g
Fk(i)c Fl(=)g Fk(n)p Fl(.)45 b(So,)32 b(assume)g Fk(i)d(<)e(n)32
b Fl(and)f(that)302 5024 y(no)j Fk(j)5 b Fl(,)36 b Fk(j)h
Fj(\025)32 b Fk(i)p Fl(,)j(lies)e(on)h Fk(p)1140 5038
y Fh(s)1210 5024 y Fl(and)g Fk(p)1437 5038 y Fh(t)1466
5024 y Fl(.)52 b(Assume)34 b(w.l.o.g.)h(that)f Fk(i)h
Fl(do)s(es)f(not)g(lie)f(on)h Fk(p)3142 5038 y Fh(t)3171
5024 y Fl(.)52 b(Let)35 b Fk(j)i(>)31 b(i)k Fl(b)s(e)302
5137 y(minimal)27 b(suc)m(h)j(that)g Fk(j)35 b Fl(lies)29
b(on)g Fk(p)1456 5151 y Fh(t)1486 5137 y Fl(.)40 b(Then)29
b Fk(w)r Fl(\()p Fk(A)1958 5151 y Fh(i)p Fq(\000)p Fb(1)2077
5137 y Fk(;)15 b(j)5 b Fl(\))27 b(=)e Fk(w)r Fl(\()p
Fk(A)2487 5151 y Fh(j)t Fq(\000)p Fb(1)2615 5137 y Fk(;)15
b(j)5 b Fl(\))31 b(since)e Fk(w)r Fl(\()p Fk(l)r(;)15
b(j)5 b Fl(\))28 b(=)c(0)31 b(for)e(all)g Fk(l)r Fl(,)302
5250 y Fk(i)j Fj(\024)f Fk(l)i(<)e(j)5 b Fl(,)36 b(b)m(y)e
(de\014nition)e(of)i(the)g(path)g Fk(p)1799 5264 y Fh(t)1828
5250 y Fl(.)52 b(Also,)35 b Fk(w)r Fl(\()p Fk(A)2310
5264 y Fh(j)t Fq(\000)p Fb(1)2437 5250 y Fk(;)15 b(j)5
b Fl(\))33 b Fj(\025)e Fk(C)41 b Fl(b)m(y)34 b(induction)d(h)m(yp)s
(othesis)302 5362 y(and)f Fk(w)r Fl(\()p Fk(A)649 5376
y Fh(i)p Fq(\000)p Fb(1)768 5362 y Fk(;)15 b(i)p Fl(\))27
b Fj(\025)e Fk(w)r Fl(\()p Fk(A)1167 5376 y Fh(i)p Fq(\000)p
Fb(1)1286 5362 y Fk(;)15 b(j)5 b Fl(\))32 b(b)m(y)e(the)h(de\014nition)
d(of)i(maxim)m(um)g(adjacency)h(searc)m(h.)1890 5841
y(2)p eop
%%Page: 3 3
3 2 bop 186 399 a Fl(2.)46 b(W)-8 b(e)45 b(only)d(need)i(to)g(sho)m(w)f
(the)h(existence)f(of)h(the)g Fk(s)p Fl(-)p Fk(t)p Fl(-join.)78
b(Assume)43 b(that)h(the)g Fk(s)p Fl(-)p Fk(t)p Fl(-join)e(do)s(es)302
511 y(not)e(exist.)66 b(Then)38 b(one)h(of)g(the)g(paths)g
Fk(p)1750 525 y Fh(s)1825 511 y Fl(or)g Fk(p)1991 525
y Fh(t)2060 511 y Fl(cannot)g(extend)g(all)f(the)h(w)m(a)m(y)h(to)g(no)
s(de)e(1,)k(sa)m(y)302 624 y Fk(p)348 638 y Fh(s)385
624 y Fl(.)77 b(Let)43 b Fk(i)k(>)e Fl(1)e(b)s(e)f(the)h(last)f(no)s
(de)g(on)h Fk(p)1850 638 y Fh(s)1886 624 y Fl(.)78 b(Then)42
b Fk(w)r Fl(\()p Fk(A)2409 638 y Fh(i)p Fq(\000)p Fb(1)2528
624 y Fk(;)15 b(i)p Fl(\))47 b(=)e(0.)78 b(On)42 b(the)h(other)g(hand,)
302 737 y Fk(w)r Fl(\()p Fk(A)472 751 y Fh(i)p Fq(\000)p
Fb(1)592 737 y Fk(;)15 b(i)p Fl(\))26 b Fj(\025)f Fk(C)32
b(>)25 b Fl(0)30 b(b)m(y)h(part)f(1,)h(a)g(con)m(tradiction.)p
3723 933 28 55 v 216 1200 a(Let)42 b Fk(k)i Fl(b)s(e)c(the)h
Fk(s)p Fl(-)p Fk(t)p Fl(-join)f(and)g(consider)g(the)h(path)g(starting)
g(in)e Fk(s)p Fl(,)44 b(follo)m(wing)39 b Fk(p)3068 1214
y Fh(s)3145 1200 y Fl(to)j Fk(k)s Fl(,)i(and)c(then)75
1313 y(follo)m(wing)34 b(\(the)i(rev)m(ersal)f(of)7 b(\))36
b Fk(p)1197 1327 y Fh(t)1262 1313 y Fl(to)g Fk(t)p Fl(.)56
b(Call)34 b(this)g(path)h Fk(p)g Fl(and)g(let)g Fk(c)h
Fl(b)s(e)f(the)h(smallest)e(w)m(eigh)m(t)i(of)g(an)m(y)75
1426 y(edge)31 b(on)f Fk(p)p Fl(.)41 b(W)-8 b(e)31 b(can)g(send)f
Fk(c)g Fl(amoun)m(t)h(of)g(\015o)m(w)f(from)g Fk(s)g
Fl(to)h Fk(t)f Fl(along)g Fk(p)p Fl(.)216 1539 y(Consider)23
b(the)i(follo)m(wing)e(\()p Fk(C)16 b Fj(\000)9 b Fk(c)p
Fl(\))26 b(-)f(reduction.)37 b(F)-8 b(or)26 b(an)m(y)f(no)s(de)f
Fk(v)k Fl(reduce)d(the)g(w)m(eigh)m(t)g(of)g(the)g(incom-)75
1652 y(ing)i(edges,)i(i.e.,)g(the)f(edges)g(connecting)g
Fk(v)j Fl(to)e(smaller)d(n)m(um)m(b)s(ered)g(no)s(des,)i(to)h(min)n(\()
p Fk(C)22 b Fj(\000)15 b Fk(c;)g(w)r Fl(\()p Fk(A)3416
1666 y Fh(v)3459 1652 y Fk(;)g(v)s Fl(\)\).)41 b(It)75
1765 y(is)31 b(completely)h(arbitrary)f(whic)m(h)g(w)m(eigh)m(ts)h(are)
h(reduced)e(except)i(if)f Fk(v)j Fl(lies)c(on)h Fk(p)g
Fl(and)f(is)g(not)i(the)f(lo)m(w)m(est)75 1878 y(n)m(um)m(b)s(ered)h
(no)s(de)g(on)h Fk(p)p Fl(.)51 b(In)33 b(the)h(latter)g(case)h(the)f(w)
m(eigh)m(t)h(of)f(the)g(edge)h(of)f Fk(p)f Fl(in)m(to)h
Fk(v)k Fl(m)m(ust)33 b(b)s(e)h(reduced)75 1991 y(b)m(y)c
Fk(c)p Fl(.)41 b(The)30 b(reduction)f(just)h(describ)s(ed)e(has)j(the)f
(follo)m(wing)f(prop)s(erties:)211 2178 y Fj(\017)46
b Fl(the)37 b(w)m(eigh)m(t)g(of)f(the)h(edges)g(on)f
Fk(p)g Fl(is)g(reduced)f(b)m(y)i Fk(c)p Fl(,)h(i.e.,)g(w)m(e)f
(constructed)g(a)g(\015o)m(w)f(of)h(amoun)m(t)g Fk(c)302
2291 y Fl(through)30 b Fk(p)p Fl(.)211 2479 y Fj(\017)46
b Fl(the)31 b(same)g(no)s(de)e(lab)s(eling)f(is)i(still)e(p)s(ossible)g
(after)j(the)f(reduction)g(b)m(y)g(Lemma)g(2.)211 2667
y Fj(\017)46 b Fk(w)369 2634 y Fq(0)393 2667 y Fl(\()p
Fk(A)496 2681 y Fh(n)p Fq(\000)p Fb(1)634 2667 y Fk(;)15
b(n)p Fl(\))25 b(=)g Fk(C)i Fj(\000)20 b Fk(c)p Fl(.)216
2854 y(The)39 b(complete)h(algorithm)e(is)g(no)m(w)i(as)f(follo)m(ws.)
67 b(W)-8 b(e)40 b(construct)g(an)f(an)g Fk(s)p Fl(-)p
Fk(t)p Fl(-\015o)m(w)g(of)h(v)-5 b(alue)38 b Fk(C)47
b Fl(:=)75 2967 y Fk(w)r Fl(\()p Fk(A)245 2981 y Fh(n)p
Fq(\000)p Fb(1)383 2967 y Fk(;)15 b(n)p Fl(\))31 b(incremen)m(tally)e
(b)m(y)h(a)h(sequence)g(of)f(reductions.)216 3180 y Ff(while)52
b Fk(C)32 b(>)25 b Fl(0)216 3293 y Fj(f)61 b Fl(let)31
b Fk(k)i Fl(b)s(e)d(the)g Fk(s)p Fl(-)p Fk(t)p Fl(-join;)322
3451 y(de\014ne)g(the)g(path)h Fk(p)f Fl(as)g(ab)s(o)m(v)m(e)i(and)e
(let)g Fk(c)g Fl(b)s(e)g(the)h(smallest)e(w)m(eigh)m(t)i(of)g(an)m(y)f
(edge)h(on)g Fk(p)p Fl(.)322 3609 y(p)s(erform)f(a)h(\()p
Fk(C)c Fj(\000)20 b Fk(c)p Fl(\))32 b(-)f(reduction.)41
b(In)30 b(this)g(reduction)f(reduce)i(the)g(w)m(eigh)m(t)g(of)g(all)f
(edges)i(of)f Fk(p)f Fl(b)m(y)322 3722 y Fk(c)p Fl(.)216
3799 y Fj(g)216 4042 y Fl(The)c(correctness)h(of)g(this)f(algorithm)f
(follo)m(ws)h(directly)f(from)h(Lemmas)g(2)h(and)f(3.)40
b(The)26 b(\014rst)g(Lemma)75 4155 y(guaran)m(tees)39
b(that)f(the)f(reductions)f(do)i(not)f(c)m(hange)i(the)e(no)s(de)g(n)m
(um)m(b)s(ering)e(and)i(the)g(second)h(Lemma)75 4268
y(guaran)m(tees)30 b(the)f(existence)h(of)f(the)g(path)f
Fk(p)h Fl(and)f(that)i Fk(w)2047 4235 y Fq(0)2070 4268
y Fl(\()p Fk(A)2173 4282 y Fh(i)p Fq(\000)p Fb(1)2292
4268 y Fk(;)15 b(i)p Fl(\))27 b(=)e Fk(C)e Fj(\000)17
b Fk(c)29 b Fl(for)g(all)f(no)s(des)g Fk(i)h Fl(with)e
Fk(i)f(>)f(k)75 4381 y Fl(after)i(the)f(reduction.)38
b(In)26 b(particular,)f Fk(w)1494 4348 y Fq(0)1518 4381
y Fl(\()p Fk(A)1621 4395 y Fh(n)p Fq(\000)p Fb(1)1759
4381 y Fk(;)15 b(n)p Fl(\))25 b(=)g Fk(C)18 b Fj(\000)12
b Fk(c)26 b Fl(and)g(hence)g(the)g(total)h(w)m(eigh)m(t)g(of)f(all)f
(paths)75 4494 y(constructed)31 b(is)e Fk(C)7 b Fl(.)40
b(Figure)30 b(2)h(sho)m(ws)f(an)g(example.)216 4657 y(W)-8
b(e)34 b(still)d(need)i(to)h(describ)s(e)d(a)i(linear)f(time)g
(implemen)m(tation.)47 b(T)-8 b(o)34 b(this)e(end)g(w)m(e)h(study)f
(the)i(global)75 4770 y(e\013ect)j(of)f(the)f(algorithm)g(on)g(a)h(v)m
(ertex)h Fk(i)p Fl(.)56 b(In)35 b(eac)m(h)i(iteration)e(the)h(w)m(eigh)
m(t)g(of)f(zero)i(or)e(more)h(edges)g Fk(j)5 b(i)75 4883
y Fl(with)29 b Fk(j)i(<)25 b(i)31 b Fl(is)f(decreased.)41
b(If)30 b Fk(i)h Fl(lies)e(on)i Fk(p)f Fl(and)g(is)f(larger)i(than)f
(the)g Fk(s)p Fl(-)p Fk(t)p Fl(-join)g(then)g(w)m(e)h(m)m(ust)f(reduce)
h(the)75 4995 y(w)m(eigh)m(t)d(of)g(the)f(edge)i(on)e
Fk(p)p Fl(;)h(otherwise)f(w)m(e)h(ha)m(v)m(e)h(complete)f(freedom)f(in)
g(whic)m(h)f(w)m(eigh)m(ts)i(to)g(reduce.)39 b(Let)75
5108 y(us)33 b(agree)i(that)g(w)m(e)f(reduce)g(the)g(w)m(eigh)m(ts)g
(of)g(edges)h Fk(j)5 b(i)35 b Fl(with)d Fk(j)40 b Fl(as)34
b(small)e(as)i(p)s(ossible.)49 b(In)33 b(other)h(w)m(ords)75
5221 y(w)m(e)f(view)f(the)h(edges)g Fk(j)5 b(i)33 b Fl(with)f
Fk(j)i(<)29 b(i)k Fl(ordered)f(b)m(y)g(increasing)f Fk(j)39
b Fl(and)32 b(either)g(reduce)g(the)h(w)m(eigh)m(t)g(of)g(the)75
5334 y(edge)e(on)f(the)h(left)f(end)g(of)g(the)h(list)e(\(if)g(no)i
(\015o)m(w)f(is)f(sen)m(t)i(through)f Fk(i)p Fl(\))h(or)f(on)g(the)h
(righ)m(t)f(end)g(of)g(the)h(list)e(\(if)75 5447 y(\015o)m(w)h(is)g
(sen)m(t)h(through)e Fk(i)p Fl(\).)42 b(Since)29 b(w)m(e)i(are)f(only)g
(in)m(terested)g(in)f(the)i(\015o)m(w)f(there)h(is)e(no)h(need)g(to)h
(mak)m(e)h(the)75 5560 y(former)e(kind)e(of)j(reduction.)40
b(This)28 b(leads)i(to)h(the)g(follo)m(wing)e(implemen)m(tation.)1890
5841 y(3)p eop
%%Page: 4 4
4 3 bop 637 882 a @beginspecial 0 @llx 0 @lly 310 @urx
70 @ury 3100 @rwi @setspecial
%%BeginDocument: example2.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: example2.fig
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Mon Feb  8 17:00:05 1999
%%For: mehlhorn@mpii-km (Kurt Mehlhorn)
%%Orientation: Portrait
%%BoundingBox: 0 0 310 70
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-9.0 82.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 2360 m -1000 -1000 l 6311 -1000 l 6311 2360 l cp clip
 0.06000 0.06000 sc
% Arc
7.500 slw
gs n 637.5 1200.0 451.6 -138.4 -41.6 arc
gs col-1 s gr
 gr

% Arc
gs n 1275.0 675.0 375.0 143.1 36.9 arcn
gs col-1 s gr
 gr

% Arc
gs n 937.5 1023.2 649.3 -169.1 -10.9 arc
gs col-1 s gr
 gr

% Arc
gs n 1537.5 775.0 576.2 167.5 12.5 arcn
gs col-1 s gr
 gr

% Arc
gs n 3637.5 1200.0 451.6 -138.4 -41.6 arc
gs col-1 s gr
 gr

% Arc
gs n 3937.5 1023.2 649.3 -169.1 -10.9 arc
gs col-1 s gr
 gr

% Arc
gs n 4537.5 775.0 576.2 167.5 12.5 arcn
gs col-1 s gr
 gr

% Ellipse
n 337 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 19.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 2137 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 139.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 937 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 59.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 1537 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 99.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3337 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 219.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 4537 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 299.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 5137 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 339.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Ellipse
n 3937 900 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 259.93 57.47]  PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
gs  clippath
2853 870 m 2973 900 l 2853 930 l 3015 930 l 3015 870 l cp
clip
n 2400 900 m 3000 900 l gs 0.00 setgray ef gr gs col-1 s gr gr

% arrowhead
n 2853 870 m 2973 900 l 2853 930 l  col-1 s
/Times-Roman ff 120.00 scf sf
1650 900 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3150 975 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 120.00 scf sf
150 975 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 120.00 scf sf
1050 900 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 120.00 scf sf
2250 900 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Roman ff 120.00 scf sf
4050 900 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 120.00 scf sf
4650 900 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Roman ff 120.00 scf sf
5250 900 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Italic ff 120.00 scf sf
975 300 m
gs 1 -1 sc (3) col-1 sh gr
/Times-Italic ff 120.00 scf sf
1275 975 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Italic ff 120.00 scf sf
1500 1275 m
gs 1 -1 sc (2) col-1 sh gr
/Times-Roman ff 120.00 scf sf
600 675 m
gs 1 -1 sc (4) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3600 675 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 120.00 scf sf
3900 300 m
gs 1 -1 sc (1) col-1 sh gr
/Times-Roman ff 120.00 scf sf
4575 1275 m
gs 1 -1 sc (1) col-1 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 75 1178 a Fl(Figure)36 b(2:)55 b(W)-8 b(e)38
b(ha)m(v)m(e)g Fk(C)43 b Fl(=)36 b(2,)j Fk(k)g Fl(=)d(2,)j
Fk(p)d Fl(=)g(\(4)p Fk(;)15 b Fl(2)p Fk(;)g Fl(3\),)42
b(and)36 b Fk(c)h Fl(=)f(1.)61 b(W)-8 b(e)38 b(p)s(erform)d(a)j
(1-reduction.)60 b(In)75 1291 y(this)32 b(reduction)g(the)i(w)m(eigh)m
(t)g(of)f(an)m(y)h(edge)g(on)f Fk(p)g Fl(is)g(reduced)f(b)m(y)h(one.)50
b(The)33 b(result)f(of)i(the)f(1-reduction)75 1404 y(is)f(sho)m(wn.)46
b(In)32 b(the)h(resulting)d(graph)i(there)h(is)f(path)g
Fk(q)j Fl(from)d Fk(s)g Fl(to)i Fk(t)e Fl(of)h(w)m(eigh)m(t)g(one.)47
b(The)32 b(t)m(w)m(o)i(paths)e Fk(p)75 1516 y Fl(and)e
Fk(q)j Fl(form)d(a)h(\015o)m(w)f(of)h(v)-5 b(alue)29
b(2)i(from)f Fk(s)g Fl(to)h Fk(t)p Fl(.)216 1769 y(First,)37
b(sort)f(for)f(eac)m(h)i Fk(i)f Fl(the)g(edges)g Fk(j)5
b(i)36 b Fl(with)f Fk(j)k(<)34 b(i)i Fl(in)e(increasing)h(order)g(of)g
Fk(j)5 b Fl(.)58 b(This)33 b(tak)m(es)38 b(linear)75
1881 y(time)30 b(b)m(y)g(buc)m(k)m(et)h(sort.)41 b(Then)29
b(initialize)f(the)i(\015o)m(w)h(construction)f(as)g(follo)m(ws.)40
b(Saturate)31 b(the)f(edge)h Fk(st)p Fl(,)f(if)75 1994
y(it)g(exists)g(and)g(remo)m(v)m(e)i(it.)40 b(Let)31
b Fk(C)h Fl(=)25 b Fk(w)r Fl(\()p Fk(A)1557 2008 y Fh(n)p
Fq(\000)p Fb(1)1696 1994 y Fk(;)15 b(n)p Fl(\))30 b(\(after)i(the)e
(remo)m(v)-5 b(al)31 b(of)g Fk(st)p Fl(\),)f(saturate)i(all)d(edges)i
(in)m(to)75 2107 y Fk(t)p Fl(,)f(and)g(push)e(\015o)m(w)i
Fk(C)36 b Fl(out)31 b(of)f Fk(s)f Fl(\(starting)h(with)f(the)h(edges)h
(leading)e(to)i(large)f Fk(j)5 b Fl('s\).)41 b(More)31
b(precisely)-8 b(,)29 b(set)75 2220 y Fk(f)10 b Fl(\()p
Fk(j;)15 b(t)p Fl(\))34 b(=)f Fk(w)r Fl(\()p Fk(j;)15
b(t)p Fl(\))37 b(for)e(all)f Fk(j)41 b Fl(and)34 b(set)i
Fk(f)10 b Fl(\()p Fk(s;)15 b(j)5 b Fl(\))34 b(=)f(min)n(\()p
Fk(w)r Fl(\()p Fk(s;)15 b(j)5 b Fl(\))p Fk(;)15 b(C)33
b Fj(\000)2481 2156 y Fi(P)2569 2243 y Fh(l)q(>j)2697
2220 y Fk(f)10 b Fl(\()p Fk(s;)15 b(l)r Fl(\)\))35 b(for)g(all)f
Fk(j)5 b Fl(.)56 b(Also,)36 b(set)75 2333 y Fk(i)26 b
Fl(=)f Fk(n)9 b Fj(\000)g Fl(2)25 b(and)f Fk(C)678 2347
y Fh(i)731 2333 y Fl(=)h Fk(C)7 b Fl(.)39 b(W)-8 b(e)26
b(will)c(next)j(iterativ)m(ely)g(decremen)m(t)h Fk(i)f
Fl(do)m(wn)f(to)i(1.)39 b(In)24 b(the)h(general)g(step,)i(the)75
2446 y(\015o)m(w)34 b(through)e(the)i(edges)g(across)g(the)g(cut)g(\()p
Fk(A)1715 2460 y Fh(i)1743 2446 y Fk(;)15 b(V)43 b Fj(\000)22
b Fk(A)2040 2460 y Fh(i)2069 2446 y Fl(\))33 b(has)h(already)f(b)s(een)
f(\014xed.)50 b(The)33 b(edges)h(carry)75 2559 y(\015o)m(w)i
Fk(C)335 2573 y Fh(i)399 2559 y Fl(from)g Fk(s)f Fl(and)h(the)g(same)g
(amoun)m(t)h(of)f(\015o)m(w)g(to)m(w)m(ards)h Fk(t)p
Fl(.)57 b(Consider)34 b(the)i(edges)h Fk(ik)j Fl(with)34
b Fk(k)k(>)c(i)p Fl(.)75 2672 y(They)h(carry)g(a)h(\015o)m(w)f
Fk(c)869 2686 y Fh(s)941 2672 y Fl(from)g Fk(s)g Fl(and)f(a)i(\015o)m
(w)f Fk(c)1734 2686 y Fh(t)1799 2672 y Fl(to)m(w)m(ards)h
Fk(t)p Fl(.)55 b(Let)36 b Fk(C)2489 2686 y Fh(i)p Fq(\000)p
Fb(1)2641 2672 y Fl(=)d Fk(C)2810 2686 y Fh(i)2861 2672
y Fj(\000)23 b Fl(min)o(\()p Fk(c)3181 2686 y Fh(s)3218
2672 y Fk(;)15 b(c)3297 2686 y Fh(t)3328 2672 y Fl(\).)55
b(Assume)75 2785 y(w.l.o.g.)37 b(that)g Fk(c)636 2799
y Fh(s)708 2785 y Fj(\025)d Fk(c)852 2799 y Fh(t)882
2785 y Fl(.)58 b(W)-8 b(e)38 b(forw)m(ard)d(\015o)m(w)h
Fk(c)1701 2799 y Fh(s)1763 2785 y Fj(\000)23 b Fk(c)1896
2799 y Fh(t)1963 2785 y Fl(along)36 b(the)g(edges)h Fk(j)5
b(i)37 b Fl(with)e Fk(j)40 b(<)35 b(i)p Fl(.)58 b(W)-8
b(e)38 b(do)e(so)g(b)m(y)75 2898 y(starting)e(with)e(the)i(edges)h
(leading)d(to)j(large)f Fk(j)5 b Fl('s.)52 b(By)34 b(our)f(previous)f
(argumen)m(ts)j(the)f(capacit)m(y)h(of)f(the)75 3011
y(edges)h Fk(j)5 b(i)p Fl(,)37 b Fk(j)h(<)32 b(i)p Fl(,)k(su\016ces)e
(to)i(forw)m(ard)e(the)h(\015o)m(w.)53 b(Altogether)36
b(w)m(e)f(ha)m(v)m(e)h(established)d(our)h(claim)f(that)75
3124 y(additional)28 b(time)i Fk(O)s Fl(\()p Fk(m)p Fl(\))h(su\016ces)f
(to)h(construct)g(a)g(maxim)m(um)e Fk(s)p Fl(-)p Fk(t)p
Fl(-\015o)m(w.)75 3405 y Fa(References)75 3607 y Fl([HO92])60
b(J.)30 b(Hao)i(and)e(J.B.)i(Orlin.)39 b(A)31 b(faster)g(algorithms)f
(for)g(\014nding)f(the)i(minim)m(um)d(cut)j(in)e(a)i(graph.)414
3720 y(In)37 b Fg(Pr)-5 b(o)g(c)g(e)g(e)g(dings)43 b(on)d(the)h(3r)-5
b(d)41 b(A)n(nnual)f(Symp)-5 b(osium)42 b(on)f(Discr)-5
b(ete)40 b(A)n(lgorithms)h(\(SOD)n(A'92\))p Fl(,)414
3833 y(v)m(olume)30 b(3,)h(pages)g(165{174.)i(A)m(CM/SIAM,)f(Jan)m
(uary)e(1992.)75 4009 y([Kar94])47 b(D.R.)32 b(Karger.)43
b(Random)31 b(sampling)e(in)h(cut,)i(\015o)m(w,)g(and)e(net)m(w)m(ork)i
(design)f(problems.)41 b(In)31 b Fg(Pr)-5 b(o-)414 4122
y(c)g(e)g(e)g(dings)33 b(of)h(the)f(26th)h(A)n(nnual)f(A)n(CM)f(Symp)-5
b(osium)35 b(on)e(The)-5 b(ory)35 b(of)e(Computing)h(\(STOC'94\))p
Fl(,)414 4235 y(pages)d(648{657,)i(Mon)m(tr)m(\023)-43
b(eal,)33 b(Qu)m(\023)-43 b(eb)s(ec,)31 b(Canada,)f(23{25)j(Ma)m(y)e
(1994.)75 4411 y([KS96])77 b(D.R.)34 b(Karger)f(and)g(C.)g(Stein.)49
b(A)33 b(new)g(approac)m(h)h(to)g(the)g(minim)m(um)c(cut)k(problem.)48
b Fg(Journal)414 4524 y(of)33 b(the)g(A)n(CM)p Fl(,)c(43\(4\):601{640,)
36 b(July)29 b(1996.)75 4700 y([NI92a])53 b(H.)43 b(Nagamo)s(c)m(hi)i
(and)e(T.)g(Ibaraki.)78 b(Computing)42 b(edge-connectivit)m(y)j(in)d(m)
m(ultigraphs)g(and)414 4813 y(capacitated)36 b(graphs.)54
b Fg(SIAM)36 b(Journal)i(on)f(Discr)-5 b(ete)37 b(Mathematics)p
Fl(,)h(5\(1\):54{66,)i(F)-8 b(ebruary)414 4926 y(1992.)75
5102 y([NI92b])47 b(H.)h(Nagamo)s(c)m(hi)h(and)f(T.)g(Ibaraki.)92
b(A)49 b(linear-time)d(algorithm)h(for)h(\014nding)e(a)j(sparse)f
Fk(k)s Fl(-)414 5215 y(connected)25 b(spanning)d(subgraph)h(of)h(a)h
Fk(k)s Fl(-connected)g(graph.)30 b Fg(A)n(lgorithmic)-5
b(a)p Fl(,)27 b(7:583{596,)j(1992.)75 5392 y([SW97])55
b(M.)49 b(Sto)s(er)h(and)e(F.)i(W)-8 b(agner.)98 b(A)50
b(simple)d(min-cut)h(algorithm.)96 b Fg(Journal)51 b(of)g(the)f(A)n(CM)
p Fl(,)414 5504 y(44\(4\):585{591,)36 b(July)28 b(1997.)1890
5841 y(4)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
